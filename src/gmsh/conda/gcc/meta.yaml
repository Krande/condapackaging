{% set name = "gmsh" %}
{% set version = "4.9.1" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  git_url: https://github.com/Krande/gmsh_fork.git
  patches:
    - patches/occ_convert_signal.patch
    - patches/fltk_nominmax.patch
    - patches/disable_wmain.patch
    # - patches/fix_and.patch

build:
  number: 0
  preserve_egg_dir: True

requirements:
  build:
    - cmake
    - ninja
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ cdt('libselinux') }}        # [linux]
    - {{ cdt('libxcb') }}            # [linux]
    - {{ cdt('libxau') }}            # [linux]
    - {{ cdt('libxdamage') }}        # [linux]
    - {{ cdt('libxxf86vm') }}        # [linux]
    - {{ cdt('mesa-libgl-devel') }}  # [linux]
    - {{ cdt('mesa-dri-drivers') }}  # [linux]
    - python *

  host:
    - libblas
    - liblapack
    - gmp  # [not win]
    - libpng
    - jpeg
    - libglu  # [linux]
    - zlib
    - xorg-libxfixes     # [linux]
    - xorg-libxext       # [linux]
    - xorg-libxrender    # [linux]
    - xorg-libx11        # [linux]
    - xorg-libxmu        # [linux]

  run:
    - gmp  # [not win]
    - libpng
    - jpeg
    - zlib
    - libglu  # [linux]
    - xorg-libxfixes     # [linux]
    - xorg-libxext       # [linux]
    - xorg-libxrender    # [linux]
    - xorg-libx11        # [linux]
    - xorg-libxmu        # [linux]

test:
  imports:
    - gmsh

about:
  home: http://geuz.org/gmsh/
  license: GPL-2.0-or-later
  license_family: GPL
  license_file: {{ environ["RECIPE_DIR"] }}/LICENSE.txt
  summary: A three-dimensional finite element mesh generator with built-in pre- and post-processing facilities
  description: |
    Gmsh is a free 3D finite element grid generator with a build-in CAD
    engine and post-processor. Its design goal is to provide a fast, light
    and user-friendly meshing tool with parametric input and advanced
    visualization capabilities. Gmsh is built around four modules:
    geometry, mesh, solver and post-processing. The specification of any
    input to these modules is done either interactively using the graphical
    user interface or in ASCII text files using Gmsh's own scripting
    language.

extra:
  recipe-maintainers:
    - guyer
    - isuruf
    - xywei
    - looooo
