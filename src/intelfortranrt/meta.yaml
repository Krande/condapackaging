{% set version = "2025.0.4" %}
# work-around for https://github.com/conda/conda-build/issues/5443
{% set intel_build_number = "dummy" %}
{% set intel_build_number = "1519" %}   # [linux]
{% set intel_build_number = "1521" %}   # [win]

{% set oneccl_version = "2021.14.0" %}
{% set oneccl_build_number = "505" %}

{% set tbb_version_major = "2022" %}

{% set umf_version = "0.9.1" %}
{% set umf_build_number = "6" %}   # [linux]
{% set umf_build_number = "5" %}   # [win]

{% set intel_ch = "https://software.repos.intel.com/python/conda" %}

# use this if our build script changes and we need to increment beyond intel's version
{% set dst_build_number = '0' %}
{% set build_number = intel_build_number|int + dst_build_number|int %}

package:
  name: intel-compiler-repack
  version: {{ version }}

source:
  # Is there a better way to specify skipping the source if it does not exist? (so it matches 'skip: True' selectors)
  - url: {{ intel_ch }}/{{ target_platform }}/intel-cmplr-lic-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2
    folder: intel-cmplr-lic-rt
    sha256: 61fc4e231dafea5d3c1bf6da8c4651f22f94c82605969a73a9dc08069683529f  # [linux64]
  - url: {{ intel_ch }}/{{ target_platform }}/intel-cmplr-lib-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2
    folder: intel-cmplr-lib-rt
    sha256: 22c74d6f81205dddba45791047e6fa77659407b4ef28c336198c62d86a23bdb3  # [linux64]
  - url: {{ intel_ch }}/{{ target_platform }}/intel-fortran-rt-{{ version }}-intel_{{ intel_build_number }}.tar.bz2
    folder: intel-fortran-rt
    sha256: 15c08e8909b9bd7488ca20a8b221ea486cde66e86e66a1d6a3276c89e320f649  # [linux64]


build:
  number: {{ build_number }}
  binary_relocation: False
  detect_binary_files_with_prefix: False
  skip: True                                  # [not (linux64 or win)]

outputs:
  - name: intel-cmplr-lic-rt
    script: repack.sh   # [unix]
    script: repack.bat  # [win]
    build:
      run_exports:
        # This is just a license file package, so let's pin it strict.
        - {{ pin_subpackage("intel-cmplr-lic-rt", exact=True) }}
    about:
      home: https://software.intel.com/content/www/us/en/develop/tools.html
      doc_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html
      dev_url: https://software.intel.com/content/www/us/en/develop/articles/end-user-license-agreement.html
      summary: Intel End User License Agreement for Developer Tools
      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools
      license_family: Proprietary
      license_file:
        - intel-cmplr-lic-rt/info/licenses/license.txt
        - intel-cmplr-lic-rt/info/licenses/tpp.txt
      description: |
        Intel End User License Agreement for Developer Tools.
        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.
    test:
      commands:
        - ls -A1 ${PREFIX}/licensing/compiler/*  # [unix]
        - dir %PREFIX%\licensing\compiler\*  # [win]

  - name: intel-cmplr-lib-rt
    script: repack.sh   # [unix]
    script: repack.bat  # [win]
    build:
      run_exports:
        # Pin to year for now, similar to MKL.
        - {{ pin_subpackage("intel-cmplr-lib-rt", max_pin="x") }}
    requirements:
      # Since it is repack, we do not need these packages in the build and host
      # sections. However it is limitation of conda-build to check for library
      # linking only for the packages that are presented in build and host and
      # have run_export section.
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ stdlib('c') }}
      host:
        - zlib
        # intel-cmplr-lic-rt is a license file, please do not remove.
        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}
      run:
        # intel-cmplr-lic-rt is a license file, please do not remove.
        - {{ pin_subpackage('intel-cmplr-lic-rt', exact=True) }}
    about:
      home: https://software.intel.com/content/www/us/en/develop/tools.html
      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/dpc-compiler.html
      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/cpp-compiler-developer-guide-and-reference/top.html
      summary: Runtime for Intel® C++ Compiler Classic
      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools
      license_family: Proprietary
      license_file:
        - intel-cmplr-lib-rt/info/licenses/license.txt
        - intel-cmplr-lib-rt/info/licenses/tpp.txt
      description: |
        Runtime for Intel® C++ Compiler Classic.
        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.
    test:
      commands:
        - ls -A1 ${PREFIX}/lib/*  # [unix]
        - dir %PREFIX%\Library\bin\*  # [win]

  - name: intel-fortran-rt
    script: repack.sh   # [unix]
    script: repack.bat  # [win]
    build:
      run_exports:
        # Pin to year for now, similar to MKL.
        - {{ pin_subpackage("intel-fortran-rt", max_pin="x") }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - patchelf                 # [linux]
      host:
        - mpich                    # [linux]
        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}
      run:
        - _openmp_mutex * *_llvm   # [linux]
        - intel-openmp              # [win]
        - llvm-openmp              # [osx]
        - {{ pin_subpackage('intel-cmplr-lib-rt', exact=True) }}
    about:
      home: https://software.intel.com/content/www/us/en/develop/tools.html
      doc_url: https://software.intel.com/content/www/us/en/develop/tools/oneapi/components/fortran-compiler.html
      dev_url: https://software.intel.com/content/www/us/en/develop/documentation/fortran-compiler-oneapi-dev-guide-and-reference/top.html
      summary: Runtime for Intel® Fortran Compiler Classic and Intel® Fortran Compiler (Beta)
      license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools
      license_family: Proprietary
      license_file:
        - intel-fortran-rt/info/licenses/license.txt
        - intel-fortran-rt/info/licenses/tpp.txt
      description: |
        Runtime for Intel® Fortran Compiler Classic and Intel® Fortran Compiler (Beta).
        This package is a repackaged set of binaries obtained directly from Intel's Anaconda.org channel.
    test:
      commands:
        - ls -A1 ${PREFIX}/lib/*  # [unix]
        - dir %PREFIX%\Library\bin\*  # [win]

about:
  home: https://github.com/AnacondaRecipes/intel-compilers-repack-feedstock
  license: LicenseRef-Proprietary-Intel-End-User-License-Agreement-for-Developer-Tools
  license_family: Proprietary
  summary: 'Repackaged Intel® compilers and runtimes.'

extra:
  recipe-maintainers:
    - napetrov
    - tomashek
    - oleksandr-pavlyk
    - ZzEeKkAa