Subject: [PATCH] int patch for aster
---
Index: include/zmumps_struc.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/zmumps_struc.h b/include/zmumps_struc.h
--- a/include/zmumps_struc.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/zmumps_struc.h	(date 1717342473745)
@@ -25,59 +25,59 @@
 !    -----------------
 !    MPI Communicator
 !    -----------------
-        INTEGER :: COMM
+        INTEGER(4) :: COMM
 !    ------------------
 !    Problem definition
 !    ------------------
 !    Solver (SYM=0 unsymmetric,SYM=1 symmetric Positive Definite, 
 !        SYM=2 general symmetric)
 !    Type of parallelism (PAR=1 host working, PAR=0 host not working)
-        INTEGER ::  SYM, PAR
-        INTEGER ::  JOB 
+        INTEGER(4) ::  SYM, PAR
+        INTEGER(4) ::  JOB 
 !    --------------------
 !    Order of Input matrix 
 !    --------------------
-        INTEGER ::  N
+        INTEGER(4) ::  N
 !
 !    ----------------------------------------
 !    Assembled input matrix : User interface
 !    ----------------------------------------
-        INTEGER    :: NZ  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: NZ  ! Standard integer input + bwd. compat.
         INTEGER(8) :: NNZ ! 64-bit integer input
         COMPLEX(kind=8), DIMENSION(:), POINTER :: A
-        INTEGER, DIMENSION(:), POINTER :: IRN, JCN
+        INTEGER(4), DIMENSION(:), POINTER :: IRN, JCN
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
 !
 !       ------------------------------------
 !       Case of distributed assembled matrix
 !       matrix on entry:
 !       ------------------------------------
-        INTEGER    :: NZ_loc  ! Standard integer input + bwd. compat.
-        INTEGER    :: pad1
+        INTEGER(4) :: NZ_loc  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: pad1
         INTEGER(8) :: NNZ_loc ! 64-bit integer input
-        INTEGER, DIMENSION(:), POINTER :: IRN_loc, JCN_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRN_loc, JCN_loc
         COMPLEX(kind=8), DIMENSION(:), POINTER :: A_loc, pad2
 !
 !    ----------------------------------------
 !    Unassembled input matrix: User interface
 !    ----------------------------------------
-        INTEGER :: NELT, pad3
-        INTEGER, DIMENSION(:), POINTER :: ELTPTR
-        INTEGER, DIMENSION(:), POINTER :: ELTVAR
+        INTEGER(4) :: NELT, pad3
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPTR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTVAR
         COMPLEX(kind=8), DIMENSION(:), POINTER :: A_ELT, pad4
 !
 !    ---------------------------------------------
 !    Symmetric permutation : 
 !               PERM_IN if given by user (optional)
 !    ---------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: PERM_IN
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_IN
 !
 !    ----------------
 !    Format by blocks
 !    ----------------
-        INTEGER :: NBLK, pad5
-        INTEGER, DIMENSION(:), POINTER :: BLKPTR
-        INTEGER, DIMENSION(:), POINTER :: BLKVAR
+        INTEGER(4) :: NBLK, pad5
+        INTEGER(4), DIMENSION(:), POINTER :: BLKPTR
+        INTEGER(4), DIMENSION(:), POINTER :: BLKVAR
 !
 ! ******************
 ! INPUT/OUTPUT data 
@@ -91,46 +91,46 @@
         COMPLEX(kind=8), DIMENSION(:), POINTER :: RHS_SPARSE
         COMPLEX(kind=8), DIMENSION(:), POINTER :: SOL_loc
         COMPLEX(kind=8), DIMENSION(:), POINTER :: RHS_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_SPARSE
-        INTEGER, DIMENSION(:), POINTER :: IRHS_PTR
-        INTEGER, DIMENSION(:), POINTER :: ISOL_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_loc
-        INTEGER :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
-        INTEGER :: LSOL_loc, pad6
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_SPARSE
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_PTR
+        INTEGER(4), DIMENSION(:), POINTER :: ISOL_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_loc
+        INTEGER(4) :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
+        INTEGER(4) :: LSOL_loc, pad6
 !    ----------------------------
 !    Control parameters,
 !    statistics and output data
 !    ---------------------------
-        INTEGER ::  ICNTL(60)
-        INTEGER ::  INFO(80) 
-        INTEGER :: INFOG(80)
+        INTEGER(4) ::  ICNTL(60)
+        INTEGER(4) ::  INFO(80) 
+        INTEGER(4) :: INFOG(80)
         DOUBLE PRECISION ::  COST_SUBTREES
         DOUBLE PRECISION ::  CNTL(15)
         DOUBLE PRECISION ::  RINFO(40)
         DOUBLE PRECISION ::  RINFOG(40)
 ! The options array for metis/parmetis
-        INTEGER ::  METIS_OPTIONS(40)
+        INTEGER(4) ::  METIS_OPTIONS(40)
 !    ---------------------------------------------------------
 !    Permutations computed during analysis:
 !       SYM_PERM: Symmetric permutation 
 !       UNS_PERM: Column permutation (optional)
 !    ---------------------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
+        INTEGER(4), DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
 ! 
 !    -----
 !    Schur
 !    -----
-        INTEGER ::  NPROW, NPCOL, MBLOCK, NBLOCK
-        INTEGER ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER ::  SIZE_SCHUR
+        INTEGER(4) ::  NPROW, NPCOL, MBLOCK, NBLOCK
+        INTEGER(4) ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) ::  SIZE_SCHUR
         COMPLEX(kind=8), DIMENSION(:), POINTER :: SCHUR
         COMPLEX(kind=8), DIMENSION(:), POINTER :: SCHUR_CINTERFACE
-        INTEGER, DIMENSION(:), POINTER :: LISTVAR_SCHUR
+        INTEGER(4), DIMENSION(:), POINTER :: LISTVAR_SCHUR
 !    -------------------------------------
 !    Case of distributed matrix on entry:
 !    ZMUMPS potentially provides mapping
 !    -------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: MAPPING
 !    --------------
 !    Version number
 !    --------------
@@ -156,132 +156,132 @@
 ! INTERNAL Working data
 ! *********************
         INTEGER(8) :: KEEP8(150), MAX_SURF_MASTER
-        INTEGER ::  INST_Number
+        INTEGER(4) ::  INST_Number
 !       For MPI
-        INTEGER ::  COMM_NODES, MYID_NODES, COMM_LOAD
-        INTEGER ::  MYID, NPROCS, NSLAVES
-        INTEGER ::  ASS_IRECV
+        INTEGER(4) ::  COMM_NODES, MYID_NODES, COMM_LOAD
+        INTEGER(4) ::  MYID, NPROCS, NSLAVES
+        INTEGER(4) ::  ASS_IRECV
 !       IS is used for the factors + workspace for contrib. blocks
-        INTEGER, DIMENSION(:), POINTER :: IS
-        INTEGER ::  KEEP(500)
+        INTEGER(4), DIMENSION(:), POINTER :: IS
+        INTEGER(4) ::  KEEP(500)
 !       The following data/arrays are computed during the analysis
 !       phase and used during the factorization and solve phases.
-        INTEGER ::  LNA
-        INTEGER ::  NBSA
-        INTEGER,POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
+        INTEGER(4) ::  LNA
+        INTEGER(4) ::  NBSA
+        INTEGER(4),POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
         INTEGER(8),POINTER,DIMENSION(:) :: PTRAR, PTR8ARR
-        INTEGER,POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
-        INTEGER,POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
+        INTEGER(4),POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
 !       Info for pruning tree 
-        INTEGER,POINTER,DIMENSION(:) :: Step2node
+        INTEGER(4),POINTER,DIMENSION(:) :: Step2node
 !       PTLUST_S and PTRFAC are two pointer arrays computed during
 !       factorization and used by the solve
-        INTEGER, DIMENSION(:), POINTER :: PTLUST_S
+        INTEGER(4), DIMENSION(:), POINTER :: PTLUST_S
         INTEGER(8), DIMENSION(:), POINTER :: PTRFAC
 !       main real working arrays for factorization/solve phases
         COMPLEX(kind=8), DIMENSION(:), POINTER :: S
 !       Information on mapping
-        INTEGER, DIMENSION(:), POINTER :: PROCNODE
+        INTEGER(4), DIMENSION(:), POINTER :: PROCNODE
 !       Input matrix ready for numerical assembly 
 !           -arrowhead format in case of assembled matrix
 !           -element format otherwise
 !       Element entry: internal data
-        INTEGER :: NELT_loc, LELTVAR
-        INTEGER, DIMENSION(:), POINTER :: ELTPROC
+        INTEGER(4) :: NELT_loc, LELTVAR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPROC
 !       Candidates and node partitionning
-        INTEGER, DIMENSION(:,:), POINTER :: CANDIDATES
-        INTEGER, DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
-        INTEGER, DIMENSION(:),   POINTER :: FUTURE_NIV2
-        INTEGER, DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
-        LOGICAL, DIMENSION(:),   POINTER :: I_AM_CAND
+        INTEGER(4), DIMENSION(:,:), POINTER :: CANDIDATES
+        INTEGER(4), DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
+        INTEGER(4), DIMENSION(:),   POINTER :: FUTURE_NIV2
+        INTEGER(4), DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
+        LOGICAL(4), DIMENSION(:),   POINTER :: I_AM_CAND
 !       For heterogeneous architecture
-        INTEGER, DIMENSION(:), POINTER :: MEM_DIST
+        INTEGER(4), DIMENSION(:), POINTER :: MEM_DIST
 !       Compressed RHS
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
-        LOGICAL  :: POSINRHSCOMP_COL_ALLOC, pad11
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
+        LOGICAL(4) :: POSINRHSCOMP_COL_ALLOC, pad11
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
         COMPLEX(kind=8), DIMENSION(:),   POINTER :: RHSCOMP
 !       Info on the subtrees to be used during factorization
         DOUBLE PRECISION, DIMENSION(:), POINTER :: MEM_SUBTREE
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COST_TRAV
-        INTEGER, DIMENSION(:),   POINTER :: MY_ROOT_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: MY_FIRST_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: MY_NB_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
-        INTEGER, DIMENSION(:),   POINTER :: SBTR_ID
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_DEP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_GRP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: CROIX_MANU
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_ROOT_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_FIRST_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_NB_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
+        INTEGER(4), DIMENSION(:),   POINTER :: SBTR_ID
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_DEP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_GRP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: CROIX_MANU
         COMPLEX(kind=8), DIMENSION(:), POINTER :: WK_USER
-        INTEGER :: NBSA_LOCAL
-        INTEGER :: LWK_USER
+        INTEGER(4) :: NBSA_LOCAL
+        INTEGER(4) :: LWK_USER
 !    Internal control array
         DOUBLE PRECISION ::  DKEEP(230)
 !    For simulating parallel out-of-core stack.
         DOUBLE PRECISION, DIMENSION(:),POINTER :: CB_SON_SIZE
 !    Instance number used/managed by the C/F77 interface
-        INTEGER ::  INSTANCE_NUMBER
+        INTEGER(4) ::  INSTANCE_NUMBER
 !    OOC management data that must persist from factorization to solve.
-        INTEGER ::  OOC_MAX_NB_NODES_FOR_ZONE
-        INTEGER, DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
+        INTEGER(4) ::  OOC_MAX_NB_NODES_FOR_ZONE
+        INTEGER(4), DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
         INTEGER(8),DIMENSION(:,:), POINTER :: OOC_SIZE_OF_BLOCK
         INTEGER(8), DIMENSION(:,:),   POINTER :: OOC_VADDR
-        INTEGER,DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
-        INTEGER,DIMENSION(:), POINTER :: OOC_NB_FILES
-        INTEGER :: OOC_NB_FILE_TYPE,pad12
-        INTEGER,DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_NB_FILES
+        INTEGER(4) :: OOC_NB_FILE_TYPE,pad12
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
         CHARACTER,DIMENSION(:,:), POINTER :: OOC_FILE_NAMES  
 !    Indices of nul pivots
-        INTEGER,DIMENSION(:), POINTER :: PIVNUL_LIST
+        INTEGER(4),DIMENSION(:), POINTER :: PIVNUL_LIST
 !    Array needed to manage additionnal candidate processor 
-        INTEGER, DIMENSION(:,:), POINTER :: SUP_PROC, pad14
+        INTEGER(4), DIMENSION(:,:), POINTER :: SUP_PROC, pad14
 !    Lists of nodes where processors work. Built/used in solve phase.
-        INTEGER, DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
+        INTEGER(4), DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
 !    Root structure(internal)
         TYPE (ZMUMPS_ROOT_STRUC) :: root
 !    Low-rank
-        INTEGER, POINTER, DIMENSION(:) :: LRGROUPS
-        INTEGER :: NBGRP,pad13
+        INTEGER(4), POINTER, DIMENSION(:) :: LRGROUPS
+        INTEGER(4) :: NBGRP,pad13
 !    Pointer encoding for FDM_F data
         CHARACTER, DIMENSION(:), POINTER :: FDM_F_ENCODING
 !    Pointer array encoding BLR factors pointers
         CHARACTER, DIMENSION(:), POINTER :: BLRARRAY_ENCODING
 !    Multicore
         TYPE(ZMUMPS_L0OMPFAC_T),DIMENSION(:),POINTER :: L0_OMP_FACTORS
-        INTEGER :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
-        INTEGER :: L_PHYS_L0_OMP
-        INTEGER :: L_VIRT_L0_OMP                                    
-        INTEGER :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
+        INTEGER(4) :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
+        INTEGER(4) :: L_PHYS_L0_OMP
+        INTEGER(4) :: L_VIRT_L0_OMP                                    
+        INTEGER(4) :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
         INTEGER(8) :: THREAD_LA
 ! Estimates before L0_OMP
-        INTEGER, DIMENSION(:,:), POINTER    :: I4_L0_OMP
+        INTEGER(4), DIMENSION(:,:), POINTER    :: I4_L0_OMP
         INTEGER(8), DIMENSION(:,:), POINTER :: I8_L0_OMP
 ! Pool before L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
 ! Pool after L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
 ! Subtrees
-        INTEGER, DIMENSION(:), POINTER :: PHYS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PHYS_L0_OMP
 ! Amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP
 ! Mapping of amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
 ! From heaviest to lowest subtree
-        INTEGER, DIMENSION(:), POINTER :: PERM_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_L0_OMP
 ! To get leafs in global pool
-        INTEGER, DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
 ! Mapping of the subtree nodes
-        INTEGER, DIMENSION(:), POINTER :: L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: L0_OMP_MAPPING
 ! Mpi to omp - mumps agile
-        INTEGER, DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
+        INTEGER(4), DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
 ! for RR on root
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER ::  NB_SINGULAR_VALUES
-        INTEGER ::  Deficiency, pad16
+        INTEGER(4) ::  NB_SINGULAR_VALUES
+        INTEGER(4) ::  Deficiency, pad16
 ! To know if OOC files are associated to a saved and so if they should be removed.
-        LOGICAL :: ASSOCIATED_OOC_FILES
+        LOGICAL(4) :: ASSOCIATED_OOC_FILES
       END TYPE ZMUMPS_STRUC
Index: include/dmumps_root.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/dmumps_root.h b/include/dmumps_root.h
--- a/include/dmumps_root.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/dmumps_root.h	(date 1717342473792)
@@ -17,16 +17,16 @@
 !     the multifrontal tree.
       TYPE DMUMPS_ROOT_STRUC
         SEQUENCE
-        INTEGER :: MBLOCK, NBLOCK, NPROW, NPCOL
-        INTEGER :: MYROW, MYCOL
-        INTEGER :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER :: RHS_NLOC
-        INTEGER :: ROOT_SIZE, TOT_ROOT_SIZE
+        INTEGER(4) :: MBLOCK, NBLOCK, NPROW, NPCOL
+        INTEGER(4) :: MYROW, MYCOL
+        INTEGER(4) :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) :: RHS_NLOC
+        INTEGER(4) :: ROOT_SIZE, TOT_ROOT_SIZE
 !       descriptor for scalapack
-        INTEGER, DIMENSION( 9 ) :: DESCRIPTOR
-        INTEGER :: CNTXT_BLACS, LPIV, rootpad0
-        INTEGER, DIMENSION(:), POINTER :: RG2L
-        INTEGER, DIMENSION(:), POINTER :: IPIV
+        INTEGER(4), DIMENSION( 9 ) :: DESCRIPTOR
+        INTEGER(4) :: CNTXT_BLACS, LPIV, rootpad0
+        INTEGER(4), DIMENSION(:), POINTER :: RG2L
+        INTEGER(4), DIMENSION(:), POINTER :: IPIV
 !       Centralized master of root
         DOUBLE PRECISION, DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
 !       Used to access Schur easily from root structure
@@ -39,12 +39,12 @@
         DOUBLE PRECISION, DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
 !       for try_nullspace preprocessing constant only:
         DOUBLE PRECISION :: QR_RCOND, rootpad3
-        LOGICAL :: yes, gridinit_done
+        LOGICAL(4) :: yes, gridinit_done
 !       for SVD on root (#define try_null_space)
         DOUBLE PRECISION, DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
 !       for RR on root (#define try_null_space)
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER :: NB_SINGULAR_VALUES,rootpad4
+        INTEGER(4) :: NB_SINGULAR_VALUES,rootpad4
 !
       END TYPE DMUMPS_ROOT_STRUC
 !     multicore
Index: libseq/mpif.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/libseq/mpif.h b/libseq/mpif.h
--- a/libseq/mpif.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/libseq/mpif.h	(date 1717342473886)
@@ -14,51 +14,51 @@
 !
 !     Stub mpif.h file including symbols used by MUMPS.
 !
-      INTEGER MPI_2DOUBLE_PRECISION
-      INTEGER MPI_2INTEGER
-      INTEGER MPI_2REAL
-      INTEGER MPI_ANY_SOURCE
-      INTEGER MPI_ANY_TAG
-      INTEGER MPI_BYTE
-      INTEGER MPI_CHARACTER
-      INTEGER MPI_COMM_NULL
-      INTEGER MPI_COMM_WORLD
-      INTEGER MPI_COMPLEX
-      INTEGER MPI_DOUBLE_COMPLEX
-      INTEGER MPI_DOUBLE_PRECISION
-      INTEGER MPI_INTEGER
-      INTEGER MPI_LOGICAL
-      INTEGER MPI_MAX
-      INTEGER MPI_MAX_PROCESSOR_NAME
-      INTEGER MPI_MAXLOC
-      INTEGER MPI_MIN
-      INTEGER MPI_MINLOC
-      INTEGER MPI_PACKED
-      INTEGER MPI_PROD
-      INTEGER MPI_REAL
-      INTEGER MPI_REPLACE
-      INTEGER MPI_REQUEST_NULL
-      INTEGER MPI_SOURCE
-      INTEGER MPI_STATUS_SIZE
-      INTEGER MPI_SUM
-      INTEGER MPI_TAG
-      INTEGER MPI_UNDEFINED
-      INTEGER MPI_WTIME_IS_GLOBAL
-      INTEGER MPI_LOR
-      INTEGER MPI_LAND
-      INTEGER MPI_INTEGER8
-      INTEGER MPI_REAL8
-      INTEGER MPI_COMM_SELF
-      INTEGER MPI_BSEND_OVERHEAD
-      INTEGER MPI_THREAD_SINGLE
-      INTEGER MPI_THREAD_FUNNELED
-      INTEGER MPI_THREAD_MULTIPLE
-      INTEGER MPI_BOR
-      INTEGER MPI_WIN_NULL
-      INTEGER MPI_ADDRESS_KIND
-      INTEGER MPI_INFO_NULL
-      INTEGER MPI_SUCCESS
-      INTEGER MPI_ERRORS_RETURN
+      INTEGER(4) MPI_2DOUBLE_PRECISION
+      INTEGER(4) MPI_2INTEGER
+      INTEGER(4) MPI_2REAL
+      INTEGER(4) MPI_ANY_SOURCE
+      INTEGER(4) MPI_ANY_TAG
+      INTEGER(4) MPI_BYTE
+      INTEGER(4) MPI_CHARACTER
+      INTEGER(4) MPI_COMM_NULL
+      INTEGER(4) MPI_COMM_WORLD
+      INTEGER(4) MPI_COMPLEX
+      INTEGER(4) MPI_DOUBLE_COMPLEX
+      INTEGER(4) MPI_DOUBLE_PRECISION
+      INTEGER(4) MPI_INTEGER
+      INTEGER(4) MPI_LOGICAL
+      INTEGER(4) MPI_MAX
+      INTEGER(4) MPI_MAX_PROCESSOR_NAME
+      INTEGER(4) MPI_MAXLOC
+      INTEGER(4) MPI_MIN
+      INTEGER(4) MPI_MINLOC
+      INTEGER(4) MPI_PACKED
+      INTEGER(4) MPI_PROD
+      INTEGER(4) MPI_REAL
+      INTEGER(4) MPI_REPLACE
+      INTEGER(4) MPI_REQUEST_NULL
+      INTEGER(4) MPI_SOURCE
+      INTEGER(4) MPI_STATUS_SIZE
+      INTEGER(4) MPI_SUM
+      INTEGER(4) MPI_TAG
+      INTEGER(4) MPI_UNDEFINED
+      INTEGER(4) MPI_WTIME_IS_GLOBAL
+      INTEGER(4) MPI_LOR
+      INTEGER(4) MPI_LAND
+      INTEGER(4) MPI_INTEGER8
+      INTEGER(4) MPI_REAL8
+      INTEGER(4) MPI_COMM_SELF
+      INTEGER(4) MPI_BSEND_OVERHEAD
+      INTEGER(4) MPI_THREAD_SINGLE
+      INTEGER(4) MPI_THREAD_FUNNELED
+      INTEGER(4) MPI_THREAD_MULTIPLE
+      INTEGER(4) MPI_BOR
+      INTEGER(4) MPI_WIN_NULL
+      INTEGER(4) MPI_ADDRESS_KIND
+      INTEGER(4) MPI_INFO_NULL
+      INTEGER(4) MPI_SUCCESS
+      INTEGER(4) MPI_ERRORS_RETURN
       PARAMETER (MPI_2DOUBLE_PRECISION=1)
       PARAMETER (MPI_2INTEGER=2)
       PARAMETER (MPI_2REAL=3)
@@ -104,7 +104,7 @@
       PARAMETER (MPI_SUCCESS=0)
       PARAMETER (MPI_ERRORS_RETURN=42)
 
-      INTEGER MPI_IN_PLACE
+      INTEGER(4) MPI_IN_PLACE
       COMMON/mpif_libseq/MPI_IN_PLACE
 
       PARAMETER (MPI_BSEND_OVERHEAD=0)
Index: include/smumps_struc.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/smumps_struc.h b/include/smumps_struc.h
--- a/include/smumps_struc.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/smumps_struc.h	(date 1717342473714)
@@ -25,59 +25,59 @@
 !    -----------------
 !    MPI Communicator
 !    -----------------
-        INTEGER :: COMM
+        INTEGER(4) :: COMM
 !    ------------------
 !    Problem definition
 !    ------------------
 !    Solver (SYM=0 unsymmetric,SYM=1 symmetric Positive Definite, 
 !        SYM=2 general symmetric)
 !    Type of parallelism (PAR=1 host working, PAR=0 host not working)
-        INTEGER ::  SYM, PAR
-        INTEGER ::  JOB 
+        INTEGER(4) ::  SYM, PAR
+        INTEGER(4) ::  JOB 
 !    --------------------
 !    Order of Input matrix 
 !    --------------------
-        INTEGER ::  N
+        INTEGER(4) ::  N
 !
 !    ----------------------------------------
 !    Assembled input matrix : User interface
 !    ----------------------------------------
-        INTEGER    :: NZ  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: NZ  ! Standard integer input + bwd. compat.
         INTEGER(8) :: NNZ ! 64-bit integer input
-        REAL, DIMENSION(:), POINTER :: A
-        INTEGER, DIMENSION(:), POINTER :: IRN, JCN
-        REAL, DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
+        REAL(4), DIMENSION(:), POINTER :: A
+        INTEGER(4), DIMENSION(:), POINTER :: IRN, JCN
+        REAL(4), DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
 !
 !       ------------------------------------
 !       Case of distributed assembled matrix
 !       matrix on entry:
 !       ------------------------------------
-        INTEGER    :: NZ_loc  ! Standard integer input + bwd. compat.
-        INTEGER    :: pad1
+        INTEGER(4) :: NZ_loc  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: pad1
         INTEGER(8) :: NNZ_loc ! 64-bit integer input
-        INTEGER, DIMENSION(:), POINTER :: IRN_loc, JCN_loc
-        REAL, DIMENSION(:), POINTER :: A_loc, pad2
+        INTEGER(4), DIMENSION(:), POINTER :: IRN_loc, JCN_loc
+        REAL(4), DIMENSION(:), POINTER :: A_loc, pad2
 !
 !    ----------------------------------------
 !    Unassembled input matrix: User interface
 !    ----------------------------------------
-        INTEGER :: NELT, pad3
-        INTEGER, DIMENSION(:), POINTER :: ELTPTR
-        INTEGER, DIMENSION(:), POINTER :: ELTVAR
-        REAL, DIMENSION(:), POINTER :: A_ELT, pad4
+        INTEGER(4) :: NELT, pad3
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPTR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTVAR
+        REAL(4), DIMENSION(:), POINTER :: A_ELT, pad4
 !
 !    ---------------------------------------------
 !    Symmetric permutation : 
 !               PERM_IN if given by user (optional)
 !    ---------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: PERM_IN
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_IN
 !
 !    ----------------
 !    Format by blocks
 !    ----------------
-        INTEGER :: NBLK, pad5
-        INTEGER, DIMENSION(:), POINTER :: BLKPTR
-        INTEGER, DIMENSION(:), POINTER :: BLKVAR
+        INTEGER(4) :: NBLK, pad5
+        INTEGER(4), DIMENSION(:), POINTER :: BLKPTR
+        INTEGER(4), DIMENSION(:), POINTER :: BLKVAR
 !
 ! ******************
 ! INPUT/OUTPUT data 
@@ -87,50 +87,50 @@
 !    -------------
 !       right-hand side and solution
 !    -------------------------------------------------------
-        REAL, DIMENSION(:), POINTER :: RHS, REDRHS
-        REAL, DIMENSION(:), POINTER :: RHS_SPARSE
-        REAL, DIMENSION(:), POINTER :: SOL_loc
-        REAL, DIMENSION(:), POINTER :: RHS_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_SPARSE
-        INTEGER, DIMENSION(:), POINTER :: IRHS_PTR
-        INTEGER, DIMENSION(:), POINTER :: ISOL_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_loc
-        INTEGER :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
-        INTEGER :: LSOL_loc, pad6
+        REAL(4), DIMENSION(:), POINTER :: RHS, REDRHS
+        REAL(4), DIMENSION(:), POINTER :: RHS_SPARSE
+        REAL(4), DIMENSION(:), POINTER :: SOL_loc
+        REAL(4), DIMENSION(:), POINTER :: RHS_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_SPARSE
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_PTR
+        INTEGER(4), DIMENSION(:), POINTER :: ISOL_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_loc
+        INTEGER(4) :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
+        INTEGER(4) :: LSOL_loc, pad6
 !    ----------------------------
 !    Control parameters,
 !    statistics and output data
 !    ---------------------------
-        INTEGER ::  ICNTL(60)
-        INTEGER ::  INFO(80) 
-        INTEGER :: INFOG(80)
-        REAL ::  COST_SUBTREES
-        REAL ::  CNTL(15)
-        REAL ::  RINFO(40)
-        REAL ::  RINFOG(40)
+        INTEGER(4) ::  ICNTL(60)
+        INTEGER(4) ::  INFO(80) 
+        INTEGER(4) :: INFOG(80)
+        REAL(4) ::  COST_SUBTREES
+        REAL(4) ::  CNTL(15)
+        REAL(4) ::  RINFO(40)
+        REAL(4) ::  RINFOG(40)
 ! The options array for metis/parmetis
-        INTEGER ::  METIS_OPTIONS(40)
+        INTEGER(4) ::  METIS_OPTIONS(40)
 !    ---------------------------------------------------------
 !    Permutations computed during analysis:
 !       SYM_PERM: Symmetric permutation 
 !       UNS_PERM: Column permutation (optional)
 !    ---------------------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
+        INTEGER(4), DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
 ! 
 !    -----
 !    Schur
 !    -----
-        INTEGER ::  NPROW, NPCOL, MBLOCK, NBLOCK
-        INTEGER ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER ::  SIZE_SCHUR
-        REAL, DIMENSION(:), POINTER :: SCHUR
-        REAL, DIMENSION(:), POINTER :: SCHUR_CINTERFACE
-        INTEGER, DIMENSION(:), POINTER :: LISTVAR_SCHUR
+        INTEGER(4) ::  NPROW, NPCOL, MBLOCK, NBLOCK
+        INTEGER(4) ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) ::  SIZE_SCHUR
+        REAL(4), DIMENSION(:), POINTER :: SCHUR
+        REAL(4), DIMENSION(:), POINTER :: SCHUR_CINTERFACE
+        INTEGER(4), DIMENSION(:), POINTER :: LISTVAR_SCHUR
 !    -------------------------------------
 !    Case of distributed matrix on entry:
 !    SMUMPS potentially provides mapping
 !    -------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: MAPPING
 !    --------------
 !    Version number
 !    --------------
@@ -156,132 +156,132 @@
 ! INTERNAL Working data
 ! *********************
         INTEGER(8) :: KEEP8(150), MAX_SURF_MASTER
-        INTEGER ::  INST_Number
+        INTEGER(4) ::  INST_Number
 !       For MPI
-        INTEGER ::  COMM_NODES, MYID_NODES, COMM_LOAD
-        INTEGER ::  MYID, NPROCS, NSLAVES
-        INTEGER ::  ASS_IRECV
+        INTEGER(4) ::  COMM_NODES, MYID_NODES, COMM_LOAD
+        INTEGER(4) ::  MYID, NPROCS, NSLAVES
+        INTEGER(4) ::  ASS_IRECV
 !       IS is used for the factors + workspace for contrib. blocks
-        INTEGER, DIMENSION(:), POINTER :: IS
-        INTEGER ::  KEEP(500)
+        INTEGER(4), DIMENSION(:), POINTER :: IS
+        INTEGER(4) ::  KEEP(500)
 !       The following data/arrays are computed during the analysis
 !       phase and used during the factorization and solve phases.
-        INTEGER ::  LNA
-        INTEGER ::  NBSA
-        INTEGER,POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
+        INTEGER(4) ::  LNA
+        INTEGER(4) ::  NBSA
+        INTEGER(4),POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
         INTEGER(8),POINTER,DIMENSION(:) :: PTRAR, PTR8ARR
-        INTEGER,POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
-        INTEGER,POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
+        INTEGER(4),POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
 !       Info for pruning tree 
-        INTEGER,POINTER,DIMENSION(:) :: Step2node
+        INTEGER(4),POINTER,DIMENSION(:) :: Step2node
 !       PTLUST_S and PTRFAC are two pointer arrays computed during
 !       factorization and used by the solve
-        INTEGER, DIMENSION(:), POINTER :: PTLUST_S
+        INTEGER(4), DIMENSION(:), POINTER :: PTLUST_S
         INTEGER(8), DIMENSION(:), POINTER :: PTRFAC
 !       main real working arrays for factorization/solve phases
-        REAL, DIMENSION(:), POINTER :: S
+        REAL(4), DIMENSION(:), POINTER :: S
 !       Information on mapping
-        INTEGER, DIMENSION(:), POINTER :: PROCNODE
+        INTEGER(4), DIMENSION(:), POINTER :: PROCNODE
 !       Input matrix ready for numerical assembly 
 !           -arrowhead format in case of assembled matrix
 !           -element format otherwise
 !       Element entry: internal data
-        INTEGER :: NELT_loc, LELTVAR
-        INTEGER, DIMENSION(:), POINTER :: ELTPROC
+        INTEGER(4) :: NELT_loc, LELTVAR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPROC
 !       Candidates and node partitionning
-        INTEGER, DIMENSION(:,:), POINTER :: CANDIDATES
-        INTEGER, DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
-        INTEGER, DIMENSION(:),   POINTER :: FUTURE_NIV2
-        INTEGER, DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
-        LOGICAL, DIMENSION(:),   POINTER :: I_AM_CAND
+        INTEGER(4), DIMENSION(:,:), POINTER :: CANDIDATES
+        INTEGER(4), DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
+        INTEGER(4), DIMENSION(:),   POINTER :: FUTURE_NIV2
+        INTEGER(4), DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
+        LOGICAL(4), DIMENSION(:),   POINTER :: I_AM_CAND
 !       For heterogeneous architecture
-        INTEGER, DIMENSION(:), POINTER :: MEM_DIST
+        INTEGER(4), DIMENSION(:), POINTER :: MEM_DIST
 !       Compressed RHS
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
-        LOGICAL  :: POSINRHSCOMP_COL_ALLOC, pad11
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
-        REAL, DIMENSION(:),   POINTER :: RHSCOMP
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
+        LOGICAL(4) :: POSINRHSCOMP_COL_ALLOC, pad11
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
+        REAL(4), DIMENSION(:),   POINTER :: RHSCOMP
 !       Info on the subtrees to be used during factorization
         DOUBLE PRECISION, DIMENSION(:), POINTER :: MEM_SUBTREE
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COST_TRAV
-        INTEGER, DIMENSION(:),   POINTER :: MY_ROOT_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: MY_FIRST_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: MY_NB_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
-        INTEGER, DIMENSION(:),   POINTER :: SBTR_ID
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_DEP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_GRP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: CROIX_MANU
-        REAL, DIMENSION(:), POINTER :: WK_USER
-        INTEGER :: NBSA_LOCAL
-        INTEGER :: LWK_USER
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_ROOT_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_FIRST_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_NB_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
+        INTEGER(4), DIMENSION(:),   POINTER :: SBTR_ID
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_DEP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_GRP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: CROIX_MANU
+        REAL(4), DIMENSION(:), POINTER :: WK_USER
+        INTEGER(4) :: NBSA_LOCAL
+        INTEGER(4) :: LWK_USER
 !    Internal control array
-        REAL ::  DKEEP(230)
+        REAL(4) ::  DKEEP(230)
 !    For simulating parallel out-of-core stack.
         DOUBLE PRECISION, DIMENSION(:),POINTER :: CB_SON_SIZE
 !    Instance number used/managed by the C/F77 interface
-        INTEGER ::  INSTANCE_NUMBER
+        INTEGER(4) ::  INSTANCE_NUMBER
 !    OOC management data that must persist from factorization to solve.
-        INTEGER ::  OOC_MAX_NB_NODES_FOR_ZONE
-        INTEGER, DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
+        INTEGER(4) ::  OOC_MAX_NB_NODES_FOR_ZONE
+        INTEGER(4), DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
         INTEGER(8),DIMENSION(:,:), POINTER :: OOC_SIZE_OF_BLOCK
         INTEGER(8), DIMENSION(:,:),   POINTER :: OOC_VADDR
-        INTEGER,DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
-        INTEGER,DIMENSION(:), POINTER :: OOC_NB_FILES
-        INTEGER :: OOC_NB_FILE_TYPE,pad12
-        INTEGER,DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_NB_FILES
+        INTEGER(4) :: OOC_NB_FILE_TYPE,pad12
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
         CHARACTER,DIMENSION(:,:), POINTER :: OOC_FILE_NAMES  
 !    Indices of nul pivots
-        INTEGER,DIMENSION(:), POINTER :: PIVNUL_LIST
+        INTEGER(4),DIMENSION(:), POINTER :: PIVNUL_LIST
 !    Array needed to manage additionnal candidate processor 
-        INTEGER, DIMENSION(:,:), POINTER :: SUP_PROC, pad14
+        INTEGER(4), DIMENSION(:,:), POINTER :: SUP_PROC, pad14
 !    Lists of nodes where processors work. Built/used in solve phase.
-        INTEGER, DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
+        INTEGER(4), DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
 !    Root structure(internal)
         TYPE (SMUMPS_ROOT_STRUC) :: root
 !    Low-rank
-        INTEGER, POINTER, DIMENSION(:) :: LRGROUPS
-        INTEGER :: NBGRP,pad13
+        INTEGER(4), POINTER, DIMENSION(:) :: LRGROUPS
+        INTEGER(4) :: NBGRP,pad13
 !    Pointer encoding for FDM_F data
         CHARACTER, DIMENSION(:), POINTER :: FDM_F_ENCODING
 !    Pointer array encoding BLR factors pointers
         CHARACTER, DIMENSION(:), POINTER :: BLRARRAY_ENCODING
 !    Multicore
         TYPE(SMUMPS_L0OMPFAC_T),DIMENSION(:),POINTER :: L0_OMP_FACTORS
-        INTEGER :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
-        INTEGER :: L_PHYS_L0_OMP
-        INTEGER :: L_VIRT_L0_OMP                                    
-        INTEGER :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
+        INTEGER(4) :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
+        INTEGER(4) :: L_PHYS_L0_OMP
+        INTEGER(4) :: L_VIRT_L0_OMP                                    
+        INTEGER(4) :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
         INTEGER(8) :: THREAD_LA
 ! Estimates before L0_OMP
-        INTEGER, DIMENSION(:,:), POINTER    :: I4_L0_OMP
+        INTEGER(4), DIMENSION(:,:), POINTER    :: I4_L0_OMP
         INTEGER(8), DIMENSION(:,:), POINTER :: I8_L0_OMP
 ! Pool before L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
 ! Pool after L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
 ! Subtrees
-        INTEGER, DIMENSION(:), POINTER :: PHYS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PHYS_L0_OMP
 ! Amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP
 ! Mapping of amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
 ! From heaviest to lowest subtree
-        INTEGER, DIMENSION(:), POINTER :: PERM_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_L0_OMP
 ! To get leafs in global pool
-        INTEGER, DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
 ! Mapping of the subtree nodes
-        INTEGER, DIMENSION(:), POINTER :: L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: L0_OMP_MAPPING
 ! Mpi to omp - mumps agile
-        INTEGER, DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
+        INTEGER(4), DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
 ! for RR on root
-        REAL, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER ::  NB_SINGULAR_VALUES
-        INTEGER ::  Deficiency, pad16
+        REAL(4), DIMENSION(:), POINTER :: SINGULAR_VALUES
+        INTEGER(4) ::  NB_SINGULAR_VALUES
+        INTEGER(4) ::  Deficiency, pad16
 ! To know if OOC files are associated to a saved and so if they should be removed.
-        LOGICAL :: ASSOCIATED_OOC_FILES
+        LOGICAL(4) :: ASSOCIATED_OOC_FILES
       END TYPE SMUMPS_STRUC
Index: include/dmumps_struc.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/dmumps_struc.h b/include/dmumps_struc.h
--- a/include/dmumps_struc.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/dmumps_struc.h	(date 1717342473682)
@@ -25,59 +25,59 @@
 !    -----------------
 !    MPI Communicator
 !    -----------------
-        INTEGER :: COMM
+        INTEGER(4) :: COMM
 !    ------------------
 !    Problem definition
 !    ------------------
 !    Solver (SYM=0 unsymmetric,SYM=1 symmetric Positive Definite, 
 !        SYM=2 general symmetric)
 !    Type of parallelism (PAR=1 host working, PAR=0 host not working)
-        INTEGER ::  SYM, PAR
-        INTEGER ::  JOB 
+        INTEGER(4) ::  SYM, PAR
+        INTEGER(4) ::  JOB 
 !    --------------------
 !    Order of Input matrix 
 !    --------------------
-        INTEGER ::  N
+        INTEGER(4) ::  N
 !
 !    ----------------------------------------
 !    Assembled input matrix : User interface
 !    ----------------------------------------
-        INTEGER    :: NZ  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: NZ  ! Standard integer input + bwd. compat.
         INTEGER(8) :: NNZ ! 64-bit integer input
         DOUBLE PRECISION, DIMENSION(:), POINTER :: A
-        INTEGER, DIMENSION(:), POINTER :: IRN, JCN
+        INTEGER(4), DIMENSION(:), POINTER :: IRN, JCN
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
 !
 !       ------------------------------------
 !       Case of distributed assembled matrix
 !       matrix on entry:
 !       ------------------------------------
-        INTEGER    :: NZ_loc  ! Standard integer input + bwd. compat.
-        INTEGER    :: pad1
+        INTEGER(4) :: NZ_loc  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: pad1
         INTEGER(8) :: NNZ_loc ! 64-bit integer input
-        INTEGER, DIMENSION(:), POINTER :: IRN_loc, JCN_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRN_loc, JCN_loc
         DOUBLE PRECISION, DIMENSION(:), POINTER :: A_loc, pad2
 !
 !    ----------------------------------------
 !    Unassembled input matrix: User interface
 !    ----------------------------------------
-        INTEGER :: NELT, pad3
-        INTEGER, DIMENSION(:), POINTER :: ELTPTR
-        INTEGER, DIMENSION(:), POINTER :: ELTVAR
+        INTEGER(4) :: NELT, pad3
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPTR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTVAR
         DOUBLE PRECISION, DIMENSION(:), POINTER :: A_ELT, pad4
 !
 !    ---------------------------------------------
 !    Symmetric permutation : 
 !               PERM_IN if given by user (optional)
 !    ---------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: PERM_IN
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_IN
 !
 !    ----------------
 !    Format by blocks
 !    ----------------
-        INTEGER :: NBLK, pad5
-        INTEGER, DIMENSION(:), POINTER :: BLKPTR
-        INTEGER, DIMENSION(:), POINTER :: BLKVAR
+        INTEGER(4) :: NBLK, pad5
+        INTEGER(4), DIMENSION(:), POINTER :: BLKPTR
+        INTEGER(4), DIMENSION(:), POINTER :: BLKVAR
 !
 ! ******************
 ! INPUT/OUTPUT data 
@@ -91,46 +91,46 @@
         DOUBLE PRECISION, DIMENSION(:), POINTER :: RHS_SPARSE
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SOL_loc
         DOUBLE PRECISION, DIMENSION(:), POINTER :: RHS_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_SPARSE
-        INTEGER, DIMENSION(:), POINTER :: IRHS_PTR
-        INTEGER, DIMENSION(:), POINTER :: ISOL_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_loc
-        INTEGER :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
-        INTEGER :: LSOL_loc, pad6
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_SPARSE
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_PTR
+        INTEGER(4), DIMENSION(:), POINTER :: ISOL_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_loc
+        INTEGER(4) :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
+        INTEGER(4) :: LSOL_loc, pad6
 !    ----------------------------
 !    Control parameters,
 !    statistics and output data
 !    ---------------------------
-        INTEGER ::  ICNTL(60)
-        INTEGER ::  INFO(80) 
-        INTEGER :: INFOG(80)
+        INTEGER(4) ::  ICNTL(60)
+        INTEGER(4) ::  INFO(80) 
+        INTEGER(4) :: INFOG(80)
         DOUBLE PRECISION ::  COST_SUBTREES
         DOUBLE PRECISION ::  CNTL(15)
         DOUBLE PRECISION ::  RINFO(40)
         DOUBLE PRECISION ::  RINFOG(40)
 ! The options array for metis/parmetis
-        INTEGER ::  METIS_OPTIONS(40)
+        INTEGER(4) ::  METIS_OPTIONS(40)
 !    ---------------------------------------------------------
 !    Permutations computed during analysis:
 !       SYM_PERM: Symmetric permutation 
 !       UNS_PERM: Column permutation (optional)
 !    ---------------------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
+        INTEGER(4), DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
 ! 
 !    -----
 !    Schur
 !    -----
-        INTEGER ::  NPROW, NPCOL, MBLOCK, NBLOCK
-        INTEGER ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER ::  SIZE_SCHUR
+        INTEGER(4) ::  NPROW, NPCOL, MBLOCK, NBLOCK
+        INTEGER(4) ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) ::  SIZE_SCHUR
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SCHUR
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SCHUR_CINTERFACE
-        INTEGER, DIMENSION(:), POINTER :: LISTVAR_SCHUR
+        INTEGER(4), DIMENSION(:), POINTER :: LISTVAR_SCHUR
 !    -------------------------------------
 !    Case of distributed matrix on entry:
 !    DMUMPS potentially provides mapping
 !    -------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: MAPPING
 !    --------------
 !    Version number
 !    --------------
@@ -156,132 +156,132 @@
 ! INTERNAL Working data
 ! *********************
         INTEGER(8) :: KEEP8(150), MAX_SURF_MASTER
-        INTEGER ::  INST_Number
+        INTEGER(4) ::  INST_Number
 !       For MPI
-        INTEGER ::  COMM_NODES, MYID_NODES, COMM_LOAD
-        INTEGER ::  MYID, NPROCS, NSLAVES
-        INTEGER ::  ASS_IRECV
+        INTEGER(4) ::  COMM_NODES, MYID_NODES, COMM_LOAD
+        INTEGER(4) ::  MYID, NPROCS, NSLAVES
+        INTEGER(4) ::  ASS_IRECV
 !       IS is used for the factors + workspace for contrib. blocks
-        INTEGER, DIMENSION(:), POINTER :: IS
-        INTEGER ::  KEEP(500)
+        INTEGER(4), DIMENSION(:), POINTER :: IS
+        INTEGER(4) ::  KEEP(500)
 !       The following data/arrays are computed during the analysis
 !       phase and used during the factorization and solve phases.
-        INTEGER ::  LNA
-        INTEGER ::  NBSA
-        INTEGER,POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
+        INTEGER(4) ::  LNA
+        INTEGER(4) ::  NBSA
+        INTEGER(4),POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
         INTEGER(8),POINTER,DIMENSION(:) :: PTRAR, PTR8ARR
-        INTEGER,POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
-        INTEGER,POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
+        INTEGER(4),POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
 !       Info for pruning tree 
-        INTEGER,POINTER,DIMENSION(:) :: Step2node
+        INTEGER(4),POINTER,DIMENSION(:) :: Step2node
 !       PTLUST_S and PTRFAC are two pointer arrays computed during
 !       factorization and used by the solve
-        INTEGER, DIMENSION(:), POINTER :: PTLUST_S
+        INTEGER(4), DIMENSION(:), POINTER :: PTLUST_S
         INTEGER(8), DIMENSION(:), POINTER :: PTRFAC
 !       main real working arrays for factorization/solve phases
         DOUBLE PRECISION, DIMENSION(:), POINTER :: S
 !       Information on mapping
-        INTEGER, DIMENSION(:), POINTER :: PROCNODE
+        INTEGER(4), DIMENSION(:), POINTER :: PROCNODE
 !       Input matrix ready for numerical assembly 
 !           -arrowhead format in case of assembled matrix
 !           -element format otherwise
 !       Element entry: internal data
-        INTEGER :: NELT_loc, LELTVAR
-        INTEGER, DIMENSION(:), POINTER :: ELTPROC
+        INTEGER(4) :: NELT_loc, LELTVAR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPROC
 !       Candidates and node partitionning
-        INTEGER, DIMENSION(:,:), POINTER :: CANDIDATES
-        INTEGER, DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
-        INTEGER, DIMENSION(:),   POINTER :: FUTURE_NIV2
-        INTEGER, DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
-        LOGICAL, DIMENSION(:),   POINTER :: I_AM_CAND
+        INTEGER(4), DIMENSION(:,:), POINTER :: CANDIDATES
+        INTEGER(4), DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
+        INTEGER(4), DIMENSION(:),   POINTER :: FUTURE_NIV2
+        INTEGER(4), DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
+        LOGICAL(4), DIMENSION(:),   POINTER :: I_AM_CAND
 !       For heterogeneous architecture
-        INTEGER, DIMENSION(:), POINTER :: MEM_DIST
+        INTEGER(4), DIMENSION(:), POINTER :: MEM_DIST
 !       Compressed RHS
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
-        LOGICAL  :: POSINRHSCOMP_COL_ALLOC, pad11
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
+        LOGICAL(4) :: POSINRHSCOMP_COL_ALLOC, pad11
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
         DOUBLE PRECISION, DIMENSION(:),   POINTER :: RHSCOMP
 !       Info on the subtrees to be used during factorization
         DOUBLE PRECISION, DIMENSION(:), POINTER :: MEM_SUBTREE
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COST_TRAV
-        INTEGER, DIMENSION(:),   POINTER :: MY_ROOT_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: MY_FIRST_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: MY_NB_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
-        INTEGER, DIMENSION(:),   POINTER :: SBTR_ID
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_DEP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_GRP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: CROIX_MANU
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_ROOT_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_FIRST_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_NB_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
+        INTEGER(4), DIMENSION(:),   POINTER :: SBTR_ID
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_DEP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_GRP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: CROIX_MANU
         DOUBLE PRECISION, DIMENSION(:), POINTER :: WK_USER
-        INTEGER :: NBSA_LOCAL
-        INTEGER :: LWK_USER
+        INTEGER(4) :: NBSA_LOCAL
+        INTEGER(4) :: LWK_USER
 !    Internal control array
         DOUBLE PRECISION ::  DKEEP(230)
 !    For simulating parallel out-of-core stack.
         DOUBLE PRECISION, DIMENSION(:),POINTER :: CB_SON_SIZE
 !    Instance number used/managed by the C/F77 interface
-        INTEGER ::  INSTANCE_NUMBER
+        INTEGER(4) ::  INSTANCE_NUMBER
 !    OOC management data that must persist from factorization to solve.
-        INTEGER ::  OOC_MAX_NB_NODES_FOR_ZONE
-        INTEGER, DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
+        INTEGER(4) ::  OOC_MAX_NB_NODES_FOR_ZONE
+        INTEGER(4), DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
         INTEGER(8),DIMENSION(:,:), POINTER :: OOC_SIZE_OF_BLOCK
         INTEGER(8), DIMENSION(:,:),   POINTER :: OOC_VADDR
-        INTEGER,DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
-        INTEGER,DIMENSION(:), POINTER :: OOC_NB_FILES
-        INTEGER :: OOC_NB_FILE_TYPE,pad12
-        INTEGER,DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_NB_FILES
+        INTEGER(4) :: OOC_NB_FILE_TYPE,pad12
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
         CHARACTER,DIMENSION(:,:), POINTER :: OOC_FILE_NAMES  
 !    Indices of nul pivots
-        INTEGER,DIMENSION(:), POINTER :: PIVNUL_LIST
+        INTEGER(4),DIMENSION(:), POINTER :: PIVNUL_LIST
 !    Array needed to manage additionnal candidate processor 
-        INTEGER, DIMENSION(:,:), POINTER :: SUP_PROC, pad14
+        INTEGER(4), DIMENSION(:,:), POINTER :: SUP_PROC, pad14
 !    Lists of nodes where processors work. Built/used in solve phase.
-        INTEGER, DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
+        INTEGER(4), DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
 !    Root structure(internal)
         TYPE (DMUMPS_ROOT_STRUC) :: root
 !    Low-rank
-        INTEGER, POINTER, DIMENSION(:) :: LRGROUPS
-        INTEGER :: NBGRP,pad13
+        INTEGER(4), POINTER, DIMENSION(:) :: LRGROUPS
+        INTEGER(4) :: NBGRP,pad13
 !    Pointer encoding for FDM_F data
         CHARACTER, DIMENSION(:), POINTER :: FDM_F_ENCODING
 !    Pointer array encoding BLR factors pointers
         CHARACTER, DIMENSION(:), POINTER :: BLRARRAY_ENCODING
 !    Multicore
         TYPE(DMUMPS_L0OMPFAC_T),DIMENSION(:),POINTER :: L0_OMP_FACTORS
-        INTEGER :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
-        INTEGER :: L_PHYS_L0_OMP
-        INTEGER :: L_VIRT_L0_OMP                                    
-        INTEGER :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
+        INTEGER(4) :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
+        INTEGER(4) :: L_PHYS_L0_OMP
+        INTEGER(4) :: L_VIRT_L0_OMP                                    
+        INTEGER(4) :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
         INTEGER(8) :: THREAD_LA
 ! Estimates before L0_OMP
-        INTEGER, DIMENSION(:,:), POINTER    :: I4_L0_OMP
+        INTEGER(4), DIMENSION(:,:), POINTER    :: I4_L0_OMP
         INTEGER(8), DIMENSION(:,:), POINTER :: I8_L0_OMP
 ! Pool before L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
 ! Pool after L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
 ! Subtrees
-        INTEGER, DIMENSION(:), POINTER :: PHYS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PHYS_L0_OMP
 ! Amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP
 ! Mapping of amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
 ! From heaviest to lowest subtree
-        INTEGER, DIMENSION(:), POINTER :: PERM_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_L0_OMP
 ! To get leafs in global pool
-        INTEGER, DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
 ! Mapping of the subtree nodes
-        INTEGER, DIMENSION(:), POINTER :: L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: L0_OMP_MAPPING
 ! Mpi to omp - mumps agile
-        INTEGER, DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
+        INTEGER(4), DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
 ! for RR on root
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER ::  NB_SINGULAR_VALUES
-        INTEGER ::  Deficiency, pad16
+        INTEGER(4) ::  NB_SINGULAR_VALUES
+        INTEGER(4) ::  Deficiency, pad16
 ! To know if OOC files are associated to a saved and so if they should be removed.
-        LOGICAL :: ASSOCIATED_OOC_FILES
+        LOGICAL(4) :: ASSOCIATED_OOC_FILES
       END TYPE DMUMPS_STRUC
Index: include/cmumps_root.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/cmumps_root.h b/include/cmumps_root.h
--- a/include/cmumps_root.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/cmumps_root.h	(date 1717342473761)
@@ -17,39 +17,39 @@
 !     the multifrontal tree.
       TYPE CMUMPS_ROOT_STRUC
         SEQUENCE
-        INTEGER :: MBLOCK, NBLOCK, NPROW, NPCOL
-        INTEGER :: MYROW, MYCOL
-        INTEGER :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER :: RHS_NLOC
-        INTEGER :: ROOT_SIZE, TOT_ROOT_SIZE
+        INTEGER(4) :: MBLOCK, NBLOCK, NPROW, NPCOL
+        INTEGER(4) :: MYROW, MYCOL
+        INTEGER(4) :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) :: RHS_NLOC
+        INTEGER(4) :: ROOT_SIZE, TOT_ROOT_SIZE
 !       descriptor for scalapack
-        INTEGER, DIMENSION( 9 ) :: DESCRIPTOR
-        INTEGER :: CNTXT_BLACS, LPIV, rootpad0
-        INTEGER, DIMENSION(:), POINTER :: RG2L
-        INTEGER, DIMENSION(:), POINTER :: IPIV
+        INTEGER(4), DIMENSION( 9 ) :: DESCRIPTOR
+        INTEGER(4) :: CNTXT_BLACS, LPIV, rootpad0
+        INTEGER(4), DIMENSION(:), POINTER :: RG2L
+        INTEGER(4), DIMENSION(:), POINTER :: IPIV
 !       Centralized master of root
-        COMPLEX, DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
+        COMPLEX(4), DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
 !       Used to access Schur easily from root structure
-        COMPLEX, DIMENSION(:), POINTER :: SCHUR_POINTER
+        COMPLEX(4), DIMENSION(:), POINTER :: SCHUR_POINTER
 !       for try_null_space preprocessing constant only:
-        COMPLEX, DIMENSION(:), POINTER :: QR_TAU, rootpad1
+        COMPLEX(4), DIMENSION(:), POINTER :: QR_TAU, rootpad1
 !       Fwd in facto: 
 !           case of scalapack root: to store RHS in 2D block cyclic
 !           format compatible with root distribution
-        COMPLEX, DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
+        COMPLEX(4), DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
 !       for try_nullspace preprocessing constant only:
-        REAL :: QR_RCOND, rootpad3
-        LOGICAL :: yes, gridinit_done
+        REAL(4) :: QR_RCOND, rootpad3
+        LOGICAL(4) :: yes, gridinit_done
 !       for SVD on root (#define try_null_space)
-        COMPLEX, DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
+        COMPLEX(4), DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
 !       for RR on root (#define try_null_space)
-        REAL, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER :: NB_SINGULAR_VALUES,rootpad4
+        REAL(4), DIMENSION(:), POINTER :: SINGULAR_VALUES
+        INTEGER(4) :: NB_SINGULAR_VALUES,rootpad4
 !
       END TYPE CMUMPS_ROOT_STRUC
 !     multicore
       TYPE CMUMPS_L0OMPFAC_T
          SEQUENCE
-         COMPLEX, POINTER, DIMENSION(:) :: A
+         COMPLEX(4), POINTER, DIMENSION(:) :: A
          INTEGER(8) :: LA
       END TYPE CMUMPS_L0OMPFAC_T
Index: include/cmumps_struc.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/cmumps_struc.h b/include/cmumps_struc.h
--- a/include/cmumps_struc.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/cmumps_struc.h	(date 1717342473667)
@@ -25,59 +25,59 @@
 !    -----------------
 !    MPI Communicator
 !    -----------------
-        INTEGER :: COMM
+        INTEGER(4) :: COMM
 !    ------------------
 !    Problem definition
 !    ------------------
 !    Solver (SYM=0 unsymmetric,SYM=1 symmetric Positive Definite, 
 !        SYM=2 general symmetric)
 !    Type of parallelism (PAR=1 host working, PAR=0 host not working)
-        INTEGER ::  SYM, PAR
-        INTEGER ::  JOB 
+        INTEGER(4) ::  SYM, PAR
+        INTEGER(4) ::  JOB 
 !    --------------------
 !    Order of Input matrix 
 !    --------------------
-        INTEGER ::  N
+        INTEGER(4) ::  N
 !
 !    ----------------------------------------
 !    Assembled input matrix : User interface
 !    ----------------------------------------
-        INTEGER    :: NZ  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: NZ  ! Standard integer input + bwd. compat.
         INTEGER(8) :: NNZ ! 64-bit integer input
-        COMPLEX, DIMENSION(:), POINTER :: A
-        INTEGER, DIMENSION(:), POINTER :: IRN, JCN
-        REAL, DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
+        COMPLEX(4), DIMENSION(:), POINTER :: A
+        INTEGER(4), DIMENSION(:), POINTER :: IRN, JCN
+        REAL(4), DIMENSION(:), POINTER :: COLSCA, ROWSCA, pad0
 !
 !       ------------------------------------
 !       Case of distributed assembled matrix
 !       matrix on entry:
 !       ------------------------------------
-        INTEGER    :: NZ_loc  ! Standard integer input + bwd. compat.
-        INTEGER    :: pad1
+        INTEGER(4) :: NZ_loc  ! Standard integer input + bwd. compat.
+        INTEGER(4) :: pad1
         INTEGER(8) :: NNZ_loc ! 64-bit integer input
-        INTEGER, DIMENSION(:), POINTER :: IRN_loc, JCN_loc
-        COMPLEX, DIMENSION(:), POINTER :: A_loc, pad2
+        INTEGER(4), DIMENSION(:), POINTER :: IRN_loc, JCN_loc
+        COMPLEX(4), DIMENSION(:), POINTER :: A_loc, pad2
 !
 !    ----------------------------------------
 !    Unassembled input matrix: User interface
 !    ----------------------------------------
-        INTEGER :: NELT, pad3
-        INTEGER, DIMENSION(:), POINTER :: ELTPTR
-        INTEGER, DIMENSION(:), POINTER :: ELTVAR
-        COMPLEX, DIMENSION(:), POINTER :: A_ELT, pad4
+        INTEGER(4) :: NELT, pad3
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPTR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTVAR
+        COMPLEX(4), DIMENSION(:), POINTER :: A_ELT, pad4
 !
 !    ---------------------------------------------
 !    Symmetric permutation : 
 !               PERM_IN if given by user (optional)
 !    ---------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: PERM_IN
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_IN
 !
 !    ----------------
 !    Format by blocks
 !    ----------------
-        INTEGER :: NBLK, pad5
-        INTEGER, DIMENSION(:), POINTER :: BLKPTR
-        INTEGER, DIMENSION(:), POINTER :: BLKVAR
+        INTEGER(4) :: NBLK, pad5
+        INTEGER(4), DIMENSION(:), POINTER :: BLKPTR
+        INTEGER(4), DIMENSION(:), POINTER :: BLKVAR
 !
 ! ******************
 ! INPUT/OUTPUT data 
@@ -87,50 +87,50 @@
 !    -------------
 !       right-hand side and solution
 !    -------------------------------------------------------
-        COMPLEX, DIMENSION(:), POINTER :: RHS, REDRHS
-        COMPLEX, DIMENSION(:), POINTER :: RHS_SPARSE
-        COMPLEX, DIMENSION(:), POINTER :: SOL_loc
-        COMPLEX, DIMENSION(:), POINTER :: RHS_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_SPARSE
-        INTEGER, DIMENSION(:), POINTER :: IRHS_PTR
-        INTEGER, DIMENSION(:), POINTER :: ISOL_loc
-        INTEGER, DIMENSION(:), POINTER :: IRHS_loc
-        INTEGER :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
-        INTEGER :: LSOL_loc, pad6
+        COMPLEX(4), DIMENSION(:), POINTER :: RHS, REDRHS
+        COMPLEX(4), DIMENSION(:), POINTER :: RHS_SPARSE
+        COMPLEX(4), DIMENSION(:), POINTER :: SOL_loc
+        COMPLEX(4), DIMENSION(:), POINTER :: RHS_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_SPARSE
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_PTR
+        INTEGER(4), DIMENSION(:), POINTER :: ISOL_loc
+        INTEGER(4), DIMENSION(:), POINTER :: IRHS_loc
+        INTEGER(4) :: LRHS, NRHS, NZ_RHS, Nloc_RHS, LRHS_loc, LREDRHS
+        INTEGER(4) :: LSOL_loc, pad6
 !    ----------------------------
 !    Control parameters,
 !    statistics and output data
 !    ---------------------------
-        INTEGER ::  ICNTL(60)
-        INTEGER ::  INFO(80) 
-        INTEGER :: INFOG(80)
-        REAL ::  COST_SUBTREES
-        REAL ::  CNTL(15)
-        REAL ::  RINFO(40)
-        REAL ::  RINFOG(40)
+        INTEGER(4) ::  ICNTL(60)
+        INTEGER(4) ::  INFO(80) 
+        INTEGER(4) :: INFOG(80)
+        REAL(4) ::  COST_SUBTREES
+        REAL(4) ::  CNTL(15)
+        REAL(4) ::  RINFO(40)
+        REAL(4) ::  RINFOG(40)
 ! The options array for metis/parmetis
-        INTEGER ::  METIS_OPTIONS(40)
+        INTEGER(4) ::  METIS_OPTIONS(40)
 !    ---------------------------------------------------------
 !    Permutations computed during analysis:
 !       SYM_PERM: Symmetric permutation 
 !       UNS_PERM: Column permutation (optional)
 !    ---------------------------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
+        INTEGER(4), DIMENSION(:), POINTER :: SYM_PERM, UNS_PERM
 ! 
 !    -----
 !    Schur
 !    -----
-        INTEGER ::  NPROW, NPCOL, MBLOCK, NBLOCK
-        INTEGER ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER ::  SIZE_SCHUR
-        COMPLEX, DIMENSION(:), POINTER :: SCHUR
-        COMPLEX, DIMENSION(:), POINTER :: SCHUR_CINTERFACE
-        INTEGER, DIMENSION(:), POINTER :: LISTVAR_SCHUR
+        INTEGER(4) ::  NPROW, NPCOL, MBLOCK, NBLOCK
+        INTEGER(4) ::  SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) ::  SIZE_SCHUR
+        COMPLEX(4), DIMENSION(:), POINTER :: SCHUR
+        COMPLEX(4), DIMENSION(:), POINTER :: SCHUR_CINTERFACE
+        INTEGER(4), DIMENSION(:), POINTER :: LISTVAR_SCHUR
 !    -------------------------------------
 !    Case of distributed matrix on entry:
 !    CMUMPS potentially provides mapping
 !    -------------------------------------
-        INTEGER, DIMENSION(:), POINTER :: MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: MAPPING
 !    --------------
 !    Version number
 !    --------------
@@ -156,132 +156,132 @@
 ! INTERNAL Working data
 ! *********************
         INTEGER(8) :: KEEP8(150), MAX_SURF_MASTER
-        INTEGER ::  INST_Number
+        INTEGER(4) ::  INST_Number
 !       For MPI
-        INTEGER ::  COMM_NODES, MYID_NODES, COMM_LOAD
-        INTEGER ::  MYID, NPROCS, NSLAVES
-        INTEGER ::  ASS_IRECV
+        INTEGER(4) ::  COMM_NODES, MYID_NODES, COMM_LOAD
+        INTEGER(4) ::  MYID, NPROCS, NSLAVES
+        INTEGER(4) ::  ASS_IRECV
 !       IS is used for the factors + workspace for contrib. blocks
-        INTEGER, DIMENSION(:), POINTER :: IS
-        INTEGER ::  KEEP(500)
+        INTEGER(4), DIMENSION(:), POINTER :: IS
+        INTEGER(4) ::  KEEP(500)
 !       The following data/arrays are computed during the analysis
 !       phase and used during the factorization and solve phases.
-        INTEGER ::  LNA
-        INTEGER ::  NBSA
-        INTEGER,POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
-        INTEGER,POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
+        INTEGER(4) ::  LNA
+        INTEGER(4) ::  NBSA
+        INTEGER(4),POINTER,DIMENSION(:) :: STEP, NE_STEPS, ND_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FRERE_STEPS, DAD_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: FILS, FRTPTR, FRTELT
         INTEGER(8),POINTER,DIMENSION(:) :: PTRAR, PTR8ARR
-        INTEGER,POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
-        INTEGER,POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
+        INTEGER(4),POINTER,DIMENSION(:) :: NINCOLARR,NINROWARR,PTRDEBARR
+        INTEGER(4),POINTER,DIMENSION(:) :: NA, PROCNODE_STEPS
 !       Info for pruning tree 
-        INTEGER,POINTER,DIMENSION(:) :: Step2node
+        INTEGER(4),POINTER,DIMENSION(:) :: Step2node
 !       PTLUST_S and PTRFAC are two pointer arrays computed during
 !       factorization and used by the solve
-        INTEGER, DIMENSION(:), POINTER :: PTLUST_S
+        INTEGER(4), DIMENSION(:), POINTER :: PTLUST_S
         INTEGER(8), DIMENSION(:), POINTER :: PTRFAC
 !       main real working arrays for factorization/solve phases
-        COMPLEX, DIMENSION(:), POINTER :: S
+        COMPLEX(4), DIMENSION(:), POINTER :: S
 !       Information on mapping
-        INTEGER, DIMENSION(:), POINTER :: PROCNODE
+        INTEGER(4), DIMENSION(:), POINTER :: PROCNODE
 !       Input matrix ready for numerical assembly 
 !           -arrowhead format in case of assembled matrix
 !           -element format otherwise
 !       Element entry: internal data
-        INTEGER :: NELT_loc, LELTVAR
-        INTEGER, DIMENSION(:), POINTER :: ELTPROC
+        INTEGER(4) :: NELT_loc, LELTVAR
+        INTEGER(4), DIMENSION(:), POINTER :: ELTPROC
 !       Candidates and node partitionning
-        INTEGER, DIMENSION(:,:), POINTER :: CANDIDATES
-        INTEGER, DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
-        INTEGER, DIMENSION(:),   POINTER :: FUTURE_NIV2
-        INTEGER, DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
-        LOGICAL, DIMENSION(:),   POINTER :: I_AM_CAND
+        INTEGER(4), DIMENSION(:,:), POINTER :: CANDIDATES
+        INTEGER(4), DIMENSION(:),   POINTER :: ISTEP_TO_INIV2
+        INTEGER(4), DIMENSION(:),   POINTER :: FUTURE_NIV2
+        INTEGER(4), DIMENSION(:,:), POINTER :: TAB_POS_IN_PERE 
+        LOGICAL(4), DIMENSION(:),   POINTER :: I_AM_CAND
 !       For heterogeneous architecture
-        INTEGER, DIMENSION(:), POINTER :: MEM_DIST
+        INTEGER(4), DIMENSION(:), POINTER :: MEM_DIST
 !       Compressed RHS
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
-        LOGICAL  :: POSINRHSCOMP_COL_ALLOC, pad11
-        INTEGER, DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
-        COMPLEX, DIMENSION(:),   POINTER :: RHSCOMP
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_ROW
+        LOGICAL(4) :: POSINRHSCOMP_COL_ALLOC, pad11
+        INTEGER(4), DIMENSION(:),   POINTER :: POSINRHSCOMP_COL
+        COMPLEX(4), DIMENSION(:),   POINTER :: RHSCOMP
 !       Info on the subtrees to be used during factorization
         DOUBLE PRECISION, DIMENSION(:), POINTER :: MEM_SUBTREE
         DOUBLE PRECISION, DIMENSION(:), POINTER :: COST_TRAV
-        INTEGER, DIMENSION(:),   POINTER :: MY_ROOT_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: MY_FIRST_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: MY_NB_LEAF
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST
-        INTEGER, DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
-        INTEGER, DIMENSION(:),   POINTER :: SBTR_ID
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_DEP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_GRP
-        INTEGER, DIMENSION(:),   POINTER :: SCHED_SBTR
-        INTEGER, DIMENSION(:),   POINTER :: CROIX_MANU
-        COMPLEX, DIMENSION(:), POINTER :: WK_USER
-        INTEGER :: NBSA_LOCAL
-        INTEGER :: LWK_USER
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_ROOT_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_FIRST_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: MY_NB_LEAF
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST
+        INTEGER(4), DIMENSION(:),   POINTER :: DEPTH_FIRST_SEQ
+        INTEGER(4), DIMENSION(:),   POINTER :: SBTR_ID
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_DEP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_GRP
+        INTEGER(4), DIMENSION(:),   POINTER :: SCHED_SBTR
+        INTEGER(4), DIMENSION(:),   POINTER :: CROIX_MANU
+        COMPLEX(4), DIMENSION(:), POINTER :: WK_USER
+        INTEGER(4) :: NBSA_LOCAL
+        INTEGER(4) :: LWK_USER
 !    Internal control array
-        REAL ::  DKEEP(230)
+        REAL(4) ::  DKEEP(230)
 !    For simulating parallel out-of-core stack.
         DOUBLE PRECISION, DIMENSION(:),POINTER :: CB_SON_SIZE
 !    Instance number used/managed by the C/F77 interface
-        INTEGER ::  INSTANCE_NUMBER
+        INTEGER(4) ::  INSTANCE_NUMBER
 !    OOC management data that must persist from factorization to solve.
-        INTEGER ::  OOC_MAX_NB_NODES_FOR_ZONE
-        INTEGER, DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
+        INTEGER(4) ::  OOC_MAX_NB_NODES_FOR_ZONE
+        INTEGER(4), DIMENSION(:,:),   POINTER :: OOC_INODE_SEQUENCE
         INTEGER(8),DIMENSION(:,:), POINTER :: OOC_SIZE_OF_BLOCK
         INTEGER(8), DIMENSION(:,:),   POINTER :: OOC_VADDR
-        INTEGER,DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
-        INTEGER,DIMENSION(:), POINTER :: OOC_NB_FILES
-        INTEGER :: OOC_NB_FILE_TYPE,pad12
-        INTEGER,DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_TOTAL_NB_NODES
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_NB_FILES
+        INTEGER(4) :: OOC_NB_FILE_TYPE,pad12
+        INTEGER(4),DIMENSION(:), POINTER :: OOC_FILE_NAME_LENGTH
         CHARACTER,DIMENSION(:,:), POINTER :: OOC_FILE_NAMES  
 !    Indices of nul pivots
-        INTEGER,DIMENSION(:), POINTER :: PIVNUL_LIST
+        INTEGER(4),DIMENSION(:), POINTER :: PIVNUL_LIST
 !    Array needed to manage additionnal candidate processor 
-        INTEGER, DIMENSION(:,:), POINTER :: SUP_PROC, pad14
+        INTEGER(4), DIMENSION(:,:), POINTER :: SUP_PROC, pad14
 !    Lists of nodes where processors work. Built/used in solve phase.
-        INTEGER, DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
+        INTEGER(4), DIMENSION(:), POINTER :: IPTR_WORKING, WORKING
 !    Root structure(internal)
         TYPE (CMUMPS_ROOT_STRUC) :: root
 !    Low-rank
-        INTEGER, POINTER, DIMENSION(:) :: LRGROUPS
-        INTEGER :: NBGRP,pad13
+        INTEGER(4), POINTER, DIMENSION(:) :: LRGROUPS
+        INTEGER(4) :: NBGRP,pad13
 !    Pointer encoding for FDM_F data
         CHARACTER, DIMENSION(:), POINTER :: FDM_F_ENCODING
 !    Pointer array encoding BLR factors pointers
         CHARACTER, DIMENSION(:), POINTER :: BLRARRAY_ENCODING
 !    Multicore
         TYPE(CMUMPS_L0OMPFAC_T),DIMENSION(:),POINTER :: L0_OMP_FACTORS
-        INTEGER :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
-        INTEGER :: L_PHYS_L0_OMP
-        INTEGER :: L_VIRT_L0_OMP                                    
-        INTEGER :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
+        INTEGER(4) :: LPOOL_A_L0_OMP, LPOOL_B_L0_OMP
+        INTEGER(4) :: L_PHYS_L0_OMP
+        INTEGER(4) :: L_VIRT_L0_OMP                                    
+        INTEGER(4) :: LL0_OMP_MAPPING, LL0_OMP_FACTORS
         INTEGER(8) :: THREAD_LA
 ! Estimates before L0_OMP
-        INTEGER, DIMENSION(:,:), POINTER    :: I4_L0_OMP
+        INTEGER(4), DIMENSION(:,:), POINTER    :: I4_L0_OMP
         INTEGER(8), DIMENSION(:,:), POINTER :: I8_L0_OMP
 ! Pool before L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_B_L0_OMP
 ! Pool after L0_OMP
-        INTEGER, DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: IPOOL_A_L0_OMP
 ! Subtrees
-        INTEGER, DIMENSION(:), POINTER :: PHYS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PHYS_L0_OMP
 ! Amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP
 ! Mapping of amalgamated subtrees
-        INTEGER, DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: VIRT_L0_OMP_MAPPING
 ! From heaviest to lowest subtree
-        INTEGER, DIMENSION(:), POINTER :: PERM_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PERM_L0_OMP
 ! To get leafs in global pool
-        INTEGER, DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
+        INTEGER(4), DIMENSION(:), POINTER :: PTR_LEAFS_L0_OMP
 ! Mapping of the subtree nodes
-        INTEGER, DIMENSION(:), POINTER :: L0_OMP_MAPPING
+        INTEGER(4), DIMENSION(:), POINTER :: L0_OMP_MAPPING
 ! Mpi to omp - mumps agile
-        INTEGER, DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
+        INTEGER(4), DIMENSION(:), POINTER :: MPITOOMP_PROCS_MAP
 ! for RR on root
-        REAL, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER ::  NB_SINGULAR_VALUES
-        INTEGER ::  Deficiency, pad16
+        REAL(4), DIMENSION(:), POINTER :: SINGULAR_VALUES
+        INTEGER(4) ::  NB_SINGULAR_VALUES
+        INTEGER(4) ::  Deficiency, pad16
 ! To know if OOC files are associated to a saved and so if they should be removed.
-        LOGICAL :: ASSOCIATED_OOC_FILES
+        LOGICAL(4) :: ASSOCIATED_OOC_FILES
       END TYPE CMUMPS_STRUC
Index: include/smumps_root.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/smumps_root.h b/include/smumps_root.h
--- a/include/smumps_root.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/smumps_root.h	(date 1717342473824)
@@ -17,39 +17,39 @@
 !     the multifrontal tree.
       TYPE SMUMPS_ROOT_STRUC
         SEQUENCE
-        INTEGER :: MBLOCK, NBLOCK, NPROW, NPCOL
-        INTEGER :: MYROW, MYCOL
-        INTEGER :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER :: RHS_NLOC
-        INTEGER :: ROOT_SIZE, TOT_ROOT_SIZE
+        INTEGER(4) :: MBLOCK, NBLOCK, NPROW, NPCOL
+        INTEGER(4) :: MYROW, MYCOL
+        INTEGER(4) :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) :: RHS_NLOC
+        INTEGER(4) :: ROOT_SIZE, TOT_ROOT_SIZE
 !       descriptor for scalapack
-        INTEGER, DIMENSION( 9 ) :: DESCRIPTOR
-        INTEGER :: CNTXT_BLACS, LPIV, rootpad0
-        INTEGER, DIMENSION(:), POINTER :: RG2L
-        INTEGER, DIMENSION(:), POINTER :: IPIV
+        INTEGER(4), DIMENSION( 9 ) :: DESCRIPTOR
+        INTEGER(4) :: CNTXT_BLACS, LPIV, rootpad0
+        INTEGER(4), DIMENSION(:), POINTER :: RG2L
+        INTEGER(4), DIMENSION(:), POINTER :: IPIV
 !       Centralized master of root
-        REAL, DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
+        REAL(4), DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
 !       Used to access Schur easily from root structure
-        REAL, DIMENSION(:), POINTER :: SCHUR_POINTER
+        REAL(4), DIMENSION(:), POINTER :: SCHUR_POINTER
 !       for try_null_space preprocessing constant only:
-        REAL, DIMENSION(:), POINTER :: QR_TAU, rootpad1
+        REAL(4), DIMENSION(:), POINTER :: QR_TAU, rootpad1
 !       Fwd in facto: 
 !           case of scalapack root: to store RHS in 2D block cyclic
 !           format compatible with root distribution
-        REAL, DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
+        REAL(4), DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
 !       for try_nullspace preprocessing constant only:
-        REAL :: QR_RCOND, rootpad3
-        LOGICAL :: yes, gridinit_done
+        REAL(4) :: QR_RCOND, rootpad3
+        LOGICAL(4) :: yes, gridinit_done
 !       for SVD on root (#define try_null_space)
-        REAL, DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
+        REAL(4), DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
 !       for RR on root (#define try_null_space)
-        REAL, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER :: NB_SINGULAR_VALUES,rootpad4
+        REAL(4), DIMENSION(:), POINTER :: SINGULAR_VALUES
+        INTEGER(4) :: NB_SINGULAR_VALUES,rootpad4
 !
       END TYPE SMUMPS_ROOT_STRUC
 !     multicore
       TYPE SMUMPS_L0OMPFAC_T
          SEQUENCE
-         REAL, POINTER, DIMENSION(:) :: A
+         REAL(4), POINTER, DIMENSION(:) :: A
          INTEGER(8) :: LA
       END TYPE SMUMPS_L0OMPFAC_T
Index: include/zmumps_root.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/zmumps_root.h b/include/zmumps_root.h
--- a/include/zmumps_root.h	(revision 61696fb7a2f766586f027673aae188ce1d86a096)
+++ b/include/zmumps_root.h	(date 1717342473855)
@@ -17,16 +17,16 @@
 !     the multifrontal tree.
       TYPE ZMUMPS_ROOT_STRUC
         SEQUENCE
-        INTEGER :: MBLOCK, NBLOCK, NPROW, NPCOL
-        INTEGER :: MYROW, MYCOL
-        INTEGER :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
-        INTEGER :: RHS_NLOC
-        INTEGER :: ROOT_SIZE, TOT_ROOT_SIZE
+        INTEGER(4) :: MBLOCK, NBLOCK, NPROW, NPCOL
+        INTEGER(4) :: MYROW, MYCOL
+        INTEGER(4) :: SCHUR_MLOC, SCHUR_NLOC, SCHUR_LLD
+        INTEGER(4) :: RHS_NLOC
+        INTEGER(4) :: ROOT_SIZE, TOT_ROOT_SIZE
 !       descriptor for scalapack
-        INTEGER, DIMENSION( 9 ) :: DESCRIPTOR
-        INTEGER :: CNTXT_BLACS, LPIV, rootpad0
-        INTEGER, DIMENSION(:), POINTER :: RG2L
-        INTEGER, DIMENSION(:), POINTER :: IPIV
+        INTEGER(4), DIMENSION( 9 ) :: DESCRIPTOR
+        INTEGER(4) :: CNTXT_BLACS, LPIV, rootpad0
+        INTEGER(4), DIMENSION(:), POINTER :: RG2L
+        INTEGER(4), DIMENSION(:), POINTER :: IPIV
 !       Centralized master of root
         COMPLEX(kind=8), DIMENSION(:), POINTER :: RHS_CNTR_MASTER_ROOT
 !       Used to access Schur easily from root structure
@@ -39,12 +39,12 @@
         COMPLEX(kind=8), DIMENSION(:,:), POINTER :: RHS_ROOT, rootpad2
 !       for try_nullspace preprocessing constant only:
         DOUBLE PRECISION :: QR_RCOND, rootpad3
-        LOGICAL :: yes, gridinit_done
+        LOGICAL(4) :: yes, gridinit_done
 !       for SVD on root (#define try_null_space)
         COMPLEX(kind=8), DIMENSION(:,:), POINTER :: SVD_U, SVD_VT
 !       for RR on root (#define try_null_space)
         DOUBLE PRECISION, DIMENSION(:), POINTER :: SINGULAR_VALUES
-        INTEGER :: NB_SINGULAR_VALUES,rootpad4
+        INTEGER(4) :: NB_SINGULAR_VALUES,rootpad4
 !
       END TYPE ZMUMPS_ROOT_STRUC
 !     multicore
