schema_version: 1

context:
  name: code-aster
  version: 17.1.12
  win_build: 1
  build: 200
  mpi_prefix: nompi

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  - url: https://gitlab.com/krande/src/-/archive/${{ version }}.${{ win_build }}/src-${{ version }}.${{ win_build }}.tar.gz
    sha256: b110bf8c06a036bbb9d7871bcaf8ad1be27b5846706b4a5c154231add3d1aa41

build:
  number: ${{ build }}
  script:
    file: bld.bat
    env:
      build_type: ${{ build_type }}
  string: py${{ CONDA_PY }}_${{ mpi_prefix }}_${{ build_type }}_h${{ PKG_HASH }}_${{ build }}
  prefix_detection:
    ignore_binary_files: true


requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - if: not win
      then: ${{ compiler('fortran') }}
    - pyyaml
    - waf 2.0.27
    - if: win
      then: clang
  host:
    - python
    - numpy
    - libboost-devel
    - if: win
      then: mkl-devel
    - if: not win
      then: openblas
    - libblas
    - liblapack
    - metis *=*${{ build_type }}*
    - mumps *=*${{ build_type }}*
    - mfront *=*${{ build_type }}*
    - mgis *=*${{ build_type }}*
    - libmed *=*${{ build_type }}*
    - scotch *=*${{ build_type }}*
    - medcoupling *=*${{ build_type }}*
    - psutil
  run:
    - python
    - if: win
      then: intel-fortran-rt
    - ${{ pin_compatible('numpy', upper_bound='x.x') }}
    - if: not win
      then: libxcrypt
  run_exports:
    - ${{ pin_subpackage(name, upper_bound='x.x') }}
  ignore_run_exports:
    by_name:
      - llvm-openmp

tests:
  - python:
      imports:
        - code_aster
      pip_check: false

  - script:
      - run_aster --help
      - python basic_import.py
    files:
      source:
        - basic_import.py

about:
  license: GPL-3.0-only AND CECILL-C AND Apache-2.0 AND LGPL-3.0-only
  summary: Code_Aster - a finite element solver
  description: |
    Code_Aster offers a full range of multiphysical analysis and modelling methods that go well beyond the standard functions of a thermomechanical calculation code: from seismic analysis to porous media via acoustics, fatigue, stochastic dynamics, etc..
  homepage: https://www.code-aster.org
  repository: https://sourceforge.net/projects/codeaster/
  documentation: https://www.code-aster.org/V2/doc/default/en/index.php?man=commande

extra:
  recipe-maintainers:
    - Krande



