schema_version: 1

context:
  name: code-aster
  source_version: 17.2.7
  win_build: 1
  version: ${{ source_version + "." + win_build }}
  build_base: 0
  mpi_num: ${{ 100 if mpi == 'nompi' else 0 }}
  build: ${{ (200 if build_type == 'release' else 0) + int_type|int + mpi_num|int + build_base|int }}
  mpi_prefix: ${{ mpi or 'nompi' }}

package:
  name: ${{ name|lower }}
  version: ${{ version }}

source:
  - url: https://gitlab.com/krande/src/-/archive/${{ version }}/src-${{ version }}.tar.gz
    sha256: fbcc62bcf08dd78c7f9dbde73f779e693c1900f32bad388ed90762105b144a16
    file_name: ${{ name }}_${{ version }}.tar.gz

build:
  number: ${{ build }}
  string: py${{ python | replace('.', '') }}_${{ mpi_prefix }}_${{ build_type }}_INT${{ int_type }}_h${{ hash }}_${{ build }}
  prefix_detection:
    ignore_binary_files: true

requirements:
  build:
    - ${{ compiler('c') }}
    - ${{ compiler('cxx') }}
    - if: not win
      then: ${{ compiler('fortran') }}
    - pyyaml
    - waf ==2.0.27
    - if: win
      then:
        - clang
        - 7zip
        - m2-patch
  host:
    - python
    - numpy
    - libboost-devel
    - if: win
      then: mkl-devel
    - if: not win
      then: openblas
    - libblas
    - liblapack
    - metis * *${{ build_type }}*${{ int_type }}*
    - mumps * *${{ build_type }}*${{ int_type }}*
    - mfront * *${{ build_type }}*
    - mgis * *${{ build_type }}*
    - libmed * *${{ build_type }}*${{ int_type }}*
    - scotch * *${{ build_type }}*${{ int_type }}*
    - medcoupling * *${{ build_type }}*${{ int_type }}*
    - psutil
  run:
    - python
    - if: win
      then: intel-fortran-rt
    - ${{ pin_compatible('numpy', upper_bound='x.x') }}
    - if: not win
      then: libxcrypt
  run_exports:
    - ${{ pin_subpackage(name, upper_bound='x.x') }}
  ignore_run_exports:
    by_name:
      - llvm-openmp
    from_package:
      - intel-fortran-rt

tests:
  - python:
      imports:
        - code_aster
      pip_check: false

  - script:
      - run_aster --help
      - python basic_import.py
    files:
      source:
        - basic_import.py

about:
  license: GPL-3.0-only AND CECILL-C AND Apache-2.0 AND LGPL-3.0-only
  summary: Code_Aster - a finite element solver
  description: |
    Code_Aster offers a full range of multiphysical analysis and modelling methods that go well beyond the standard functions of a thermomechanical calculation code: from seismic analysis to porous media via acoustics, fatigue, stochastic dynamics, etc..
  homepage: https://www.code-aster.org
  repository: https://sourceforge.net/projects/codeaster/
  documentation: https://www.code-aster.org/V2/doc/default/en/index.php?man=commande

extra:
  recipe-maintainers:
    - Krande



