{% set name = "aster" %}
{% set version = "15.2" %}
{% set minor_version = "2" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - fn: {{ name }}_{{ version }}.{{ minor_version }}.tar.gz
    url: https://gitlab.com/codeaster/src/-/archive/{{ version }}.{{ minor_version }}/src-{{ version }}.{{ minor_version }}.tar.gz
    sha256: {{ sha256 }}
  - url: https://support.hdfgroup.org/ftp/HDF5/releases/hdf5-1.10/hdf5-${VERSION_HDF5}/src/hdf5-${VERSION_HDF5}.tar.gz
    sha256: 1b295f9ce260c19d2d93fb2430be4139496c56f58f74ef7956ccd26c854fcc2e
    folder: metis-aster
  - url: http://mumps.enseeiht.fr/MUMPS_5.1.2.tar.gz
    sha256: eb345cda145da9aea01b851d17e54e7eef08e16bfa148100ac1f7f046cd42ae9
    folder: mumps-aster
  - url: https://netcologne.dl.sourceforge.net/project/prereq/homard-11.12_aster2.tar.gz
    sha256: 80425cee117349df8425f801f9a82aadb85fd41a95af25b4397f0e69dd655304
    folder: homard

build:
  number: 0
  detect_binary_files_with_prefix: True


requirements:
  build:
    - gcc 8  # [linux]
    - gxx 8  # [linux]
    - gfortran 8  # [linux]
    - sysroot_linux-64 =2.17
  host:
    - cmake
    - make
    - bison
    - flex
    - swig
    - gettext
    - python 3.9
    - numpy 1.20
    - libgomp  # [linux]
    - libmed 4.0
    - hdf5 1.10.6
    - scotch
    - libblas
    - liblapack

  run:
    - python
    #- {{ pin_compatible('mfront', max_pin='x.x') }}
    - {{ pin_compatible('miss3d', max_pin='x.x') }}
    - {{ pin_compatible('numpy', max_pin='x.x') }}
    - {{ pin_compatible('boost', max_pin='x.x') }}
    - {{ pin_compatible('libmed', max_pin='x.x') }}
    - {{ pin_compatible('hdf5', max_pin='x.x') }}
    - {{ pin_compatible('scotch', max_pin='x.x') }}
    - libgomp  # [linux]

test:
  imports:
     - asrun
#    - code_aster

about:
  home: https://www.code-aster.org
  license: GPL-3.0-only AND CECILL-C AND Apache-2.0 AND LGPL-3.0-only
  license_family: GPL
  license_file:
    - LICENSE.txt
    - dep-licenses/
  summary: 'Code_Aster : a finite element solver'
  description: |
    Code_Aster offers a full range of multiphysical analysis and modelling methods that go well beyond the standard functions of a thermomechanical calculation code: from seismic analysis to porous media via acoustics, fatigue, stochastic dynamics, etc..
  doc_url: https://www.code-aster.org/V2/doc/default/en/index.php?man=commande
  dev_url: https://sourceforge.net/projects/codeaster/

extra:
  recipe-maintainers:
    - ldallolio
