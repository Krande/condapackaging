name: ci-code-aster-ctest

on:
  workflow_call:
    inputs:
      conda_label:
        description: 'conda label'
        type: string
        required: true
      conda_user:
        description: 'conda user'
        type: string
        required: true


jobs:
  run_ctest:
    name: ctest-code_aster-${{ matrix.platform.name }}-${{ matrix.pyver.distver }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        pyver: [ '3.9', '3.10', '3.11' ]
        platform: [
          { name: linux, distver: ubuntu-latest, pkg_dir: linux-64 },
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1 # https://github.com/mamba-org/setup-micromamba
        with:
          environment-name: test-env
          condarc: |
            remote_max_retries: 5
            remote_backoff_factor: 5
            channels:
              - ${{ inputs.conda_user }}/label/${{ inputs.conda_label }}
              - conda-forge
          create-args: >-
            python=${{ matrix.pyver }}
            code-aster==16.4.2

      - name: run ctest
        continue-on-error: true
        run: |
          run_ctest --resutest=${{github.workspace}}/ctest -L submit -L sequential -LE need_data --timefactor=5.0 --only-failed-results -j 2 --output-on-failure

      - name: add mamba data
        run: |
          echo "$(micromamba list)" > ${{ github.workspace }}/ctest/mamba.txt

      - name: print debug logs
        continue-on-error: true
        run: |
          python src/code_aster/.tests/scan_failed.py --test-dir=${{github.workspace}}/ctest
          python src/code_aster/.tests/scan_failed.py --test-dir=${{github.workspace}}/ctest > ${{ github.workspace }}/ctest/summary.txt

      - name: Upload ctest for packaging
        uses: actions/upload-artifact@v2
        with:
          name: ctest-code_aster-${{ matrix.platform.name }}-${{ matrix.pyver }}
          path: ${{ github.workspace }}/ctest

  upload_test_results:
    needs: run_ctest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download all ctest artifacts
        uses: actions/download-artifact@v3

      - name: Package ctest directories
        run: |
          tar czf ctest-results-${{ inputs.conda_label }}.tar.gz ctest-*

      - name: Create Release and Upload Tarball
        uses: softprops/action-gh-release@v1
        with:
          tag_name: code-aster-16.4.2-ctest-${{ inputs.conda_label }}
          name: CTest Results code-aster-16.4.2 [${{ inputs.conda_label }}]
          body: Automated release created on ${{ github.sha }}. Contains ctest results from ${{ inputs.conda_label }}.
          draft: false
          prerelease: false
          files: ctest-results-${{ inputs.conda_label }}.tar.gz