name: ci-code-aster
# bump 1
on:
  push:
    paths:
      - src/**
      - .github/workflows/ci.yml
    branches:
    - donotrun

jobs:
  build_test:
    name: ${{ matrix.package.name }}-${{ matrix.platform.name }}-${{ matrix.pyver.name }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        package: [
#          { name: code_aster/mfront },
#          { name: code_aster/code_aster },
#          { name: code_aster/asrun },
        ]
        pyver: [
          { name: py311, distver: '3.11'},
        ]
        platform: [
          { name: win, distver: windows-latest },
          { name: linux, distver: ubuntu-latest },
          { name: macOS, distver: macos-latest }
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: mamba-org/provision-with-micromamba@main # https://github.com/mamba-org/provision-with-micromamba
        with:
          environment-name: conda-build
          channels: conda-forge
          channel-priority: strict
          environment-file: environment.conda.yml
          extra-specs: |
            python=${{ matrix.pyver.distver }}
      - name: VS install on windows
        if: ${{ matrix.platform.name == 'win' }}
        run: |
          conda install -c conda-forge vs2019_win-64
      - name: VS install on windows
        if: ${{ matrix.platform.name == 'win' && matrix.package.name == 'code_aster/libmed' }}
        run: |
          choco install mingw
      - name: build local packages
        run: |
          conda mambabuild . --python ${{ matrix.pyver.distver }} -c krande/label/dev -c conda-forge --token ${{ secrets.ANACONDA_TOKEN }} --user krande --label dev
        working-directory: src/${{ matrix.package.name }}