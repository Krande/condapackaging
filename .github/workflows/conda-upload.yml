name: ci-conda-upload

# bump 1
on:
  workflow_call:
    inputs:
      artifacts_dir:
        description: 'package name'
        type: string
        required: true
      conda_url:
        description: 'use boa'
        type: boolean
        required: true
      conda_channel:
        description: 'should produce a debug build'
        type: string
        required: false
        default: "False"

    secrets:
      CONDA_TOKEN:
        required: true

    # Return all outputs so that they can optionally be used in subsequent steps
    outputs:
      conda_label:
        description: "conda label"
        value: ${{ jobs.build_conda.outputs.conda_label }}
      conda_user:
        description: "conda user"
        value: ${{ jobs.build_conda.outputs.conda_user }}

env:
  PKG_DEBUG: "False"
  CONDA_UPSTREAM_LABEL: ${{ inputs.conda_upstream_label }}
  CONDA_UPSTREAM_USER: ${{ inputs.conda_upstream_user }}
  CONDA_DIR: ${{ inputs.pkg_dir }}/${{ inputs.package_name }}
  WORK_DIR: ${{ inputs.work_dir }}
  ARTIFACTS_DIR: ${{ inputs.work_dir }}/artifacts
  CROOT_DIR: ${{ inputs.work_dir }}/build
  CLICOLOR_FORCE: "1"
  VARIANT_STR: ""

jobs:
  upload_conda:
    name: Upload to conda
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3

      - name: upload to anaconda
        run: |
          pkg_dir="${{ env.ARTIFACTS_DIR }}/${{ env.PKG_DIR }}"
          noarch_dir="${{ env.ARTIFACTS_DIR }}/noarch"

          # Check if the regular directory exists
          if [ -d "$pkg_dir" ]; then
              # Check if there are any .conda files to upload in the regular directory
              if ls "$pkg_dir"/*.conda 1> /dev/null 2>&1; then
                  path="${pkg_dir}/*.conda"
                  anaconda -t ${{ secrets.CONDA_TOKEN }} upload --force --user ${{ inputs.conda_user }} --label ${{ inputs.conda_label }} $path
              else
                  echo "No .conda files found in $pkg_dir, skipping upload."
              fi
          else
              echo "Regular directory does not exist, skipping upload."
          fi

          # Check if the noarch directory exists
          if [ -d "$noarch_dir" ]; then
              # Check if there are any .conda files to upload in the noarch directory
              if ls "$noarch_dir"/*.conda 1> /dev/null 2>&1; then
                  path="${noarch_dir}/*.conda"
                  anaconda -t ${{ secrets.CONDA_TOKEN }} upload --force --user ${{ inputs.conda_user }} --label ${{ inputs.conda_label }} $path
              else
                  echo "No .conda files found in $noarch_dir, skipping upload."
              fi
          else
              echo "Noarch directory does not exist, skipping upload."
          fi
