name: ci-libmed
# bump 1
on:
  push:
    paths:
      - src/code_aster/libmed/**
      - .github/workflows/ci-libmed.yml
#    branches:
#    - donotrun

env:
  PKG_NAME: libmed
  PKG_PATH: src/code_aster/libmed

jobs:
  build_test:
    name: ${{ matrix.platform.name }}-${{ matrix.pyver.distver }}
    runs-on: ${{ matrix.platform.distver }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        pyver: [
          { name: py39, distver: '3.9'},
          { name: py310, distver: '3.10'},
          { name: py311, distver: '3.11'},
        ]
        platform: [
          { name: win, distver: windows-2022, pkg_dir: win-64 },
#          { name: linux, distver: ubuntu-latest, pkg_dir: linux-64 },
#          { name: macOS, distver: macos-latest pkg_dir: osx-64}
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: mamba-org/setup-micromamba@v1 # https://github.com/mamba-org/setup-micromamba
        with:
          environment-file: environment.conda.yml
          create-args: >-
            python=${{ matrix.pyver.distver }}

      - name: set ENV WORK_DIR
        run: |
          conda config --show-sources
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "PKG_DIR=win-64" >> $GITHUB_ENV
            echo "WORK_DIR=C:\\actions-runner\\_work" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            echo "PKG_DIR=osx-64" >> $GITHUB_ENV
            echo "WORK_DIR=/Users/runner/work" >> $GITHUB_ENV
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            echo "PKG_DIR=linux-64" >> $GITHUB_ENV
            echo "WORK_DIR=/home/runner/work" >> $GITHUB_ENV
          fi

      - name: build local packages
        run: |
          artifacts_dir=${{ env.WORK_DIR }}/artifacts
          build_dir=${{ env.WORK_DIR }}/build

          if [ "${{ matrix.platform.pkg_dir }}" == 'win-64' ]; then
            artifacts_dir="'$artifacts_dir'"
            build_dir="'$build_dir'"
          fi
          
          mkdir -p $artifacts_dir
          mkdir -p $build_dir
          # conda mambabuild . --python ${{ matrix.pyver.distver }} --croot ${{ env.WORK_DIR }}/build --output-folder ${{ env.WORK_DIR }}/artifacts
          boa build . --python ${{ matrix.pyver.distver }} --croot $build_dir --output-folder $artifacts_dir --pkg-format=2
        working-directory: ${{ env.PKG_PATH }}

      - name: upload to anaconda
        run: |
          path="${{ env.WORK_DIR }}/artifacts/${{ env.PKG_DIR }}/*.conda"
          # path="${{ env.WORK_DIR }}/artifacts/${{ env.PKG_DIR }}/*.tar.bz2"
          if [ "${{ matrix.platform.pkg_dir }}" == 'win-64' ]; then
            path="'$path'"
          fi
          anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload --force --user krande --label dev $path
