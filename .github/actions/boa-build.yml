name: 'Boa build'
description: 'Build and upload to anaconda using boa'
inputs:
  path:
    description: 'The path to use'
    required: true
  name:
    description: 'The name to use'
    required: true
  python:
    description: 'The python version to use'
    required: true
runs:
  using: 'composite'
  steps:
    - uses: actions/checkout@v3
    - uses: mamba-org/setup-micromamba@v1 # https://github.com/mamba-org/setup-micromamba
      with:
        environment-file: environment.conda.yml
        create-args: >-
          python=${{ inputs.python }}
    - name: set ENV WORK_DIR
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          echo "PKG_DIR=win-64" >> $GITHUB_ENV
          echo "WORK_DIR=C:\\actions-runner\\_work" >> $GITHUB_ENV
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          echo "PKG_DIR=osx-64" >> $GITHUB_ENV
          echo "WORK_DIR=/Users/runner/work" >> $GITHUB_ENV
        elif [[ "$RUNNER_OS" == "Linux" ]]; then
          echo "PKG_DIR=linux-64" >> $GITHUB_ENV
          echo "WORK_DIR=/home/runner/work" >> $GITHUB_ENV
        fi
    - name: build local packages
      run: |
        conda config --add channels krande
        conda config --add channels krande/label/dev
        conda config --add channels conda-forge
        mkdir -p ${{ env.WORK_DIR }}/artifacts
        mkdir -p ${{ env.WORK_DIR }}/build
        boa build . --python ${{ inputs.python }} --croot ${{ env.WORK_DIR }}/build --output-folder ${{ env.WORK_DIR }}/artifacts
      working-directory: ${{ inputs.path }}

    - name: upload to anaconda
      run: |
        path="${{ env.WORK_DIR }}/artifacts/${{ env.PKG_DIR }}/*.tar.bz2"
        if [ "${{ env.PKG_DIR }}" == 'win-64' ]; then
          path="'$path'"
        fi
        anaconda -t ${{ secrets.ANACONDA_TOKEN }} upload --force --user krande --label dev $path
