[project]
name = "condapackaging"
version = "0.1.0"
description = "A project for developing conda packages"
channels = ["conda-forge"]
platforms = ["win-64", "linux-64"]

[environments]
cpack = { features=["cpack"], solve-group="cpack", no-default-feature=true }
debug = { features=["debug"], no-default-feature=true }
release = { features=["release"], no-default-feature=true }
rattler = { features=["rattler"], no-default-feature=true }
boa = { features=["boa"], no-default-feature=true }
cpacktest = { features=["cpacktest"], solve-group="cpack", no-default-feature=true }


[dependencies]
python-dotenv = ">=1.0.1,<1.1"
pixi-pycharm = ">=0.0.8,<0.0.9"

[feature.boa.dependencies]
boa = ">=0.17.0,<0.18"

[feature.rattler.dependencies]
conda-recipe-manager = ">=0.3.0,<0.4"
rattler-build = { version=">=0.35.6,<0.36" }

[feature.cpack.dependencies]
python-dotenv = ">=1.0.1,<1.1"
quetz-client = ">=0.5.0,<0.6"
python-libarchive-c = "*"
"ruamel.yaml.jinja2" = "*"
typer = "*"
toposort = "*"
colorama = "*"
boa = "*"
rattler-build = "*"
py-rattler-build = "*"

[feature.cpacktest.dependencies]
pytest = "*"

[feature.cpack.pypi-dependencies]
cpack = { path = "./src/cpack", editable = true }

[feature.cpack.tasks]
cpack-actions = { cmd = ["cpack-actions"] }
cpack-quetz = { cmd = ["cpack-quetz"] }
ca-batch-prep = { cmd = ["python", ".github/actions/ca-batch-prep/set_vars.py"] }
cpack-ctest-md-gen = { cmd = ["cpack-md-gen"] }

[feature.rattler.tasks]
flang = { cmd = ["rattler-build", "build","-r", "src/llvm/flang/recipe.yaml", "-m", "src/common_rattler.yaml"] }
hdf5 = { cmd = ["rattler-build", "build","-r", "src/hdf5/recipe.yaml", "-m", "src/common_rattler.yaml"], outputs=["output/win-64/hdf5*.conda"] }

topologic = { cmd = ["rattler-build", "build", "-r", "src/topologic/topologic-core/recipe.yaml", "-m", "src/common_rattler.yaml"] }
topologicpy = { cmd = ["rattler-build", "build", "-r", "src/topologic/topologic-py/recipe.yaml", "-m", "src/common_rattler.yaml"] }

# Intel LLVM Compiler
intelfortranrt = { cmd = ["rattler-build", "build", "-r", "src/intelfortranrt/recipe.yaml", "-m", "src/common_rattler.yaml"] }

# Code Aster
scotch = { cmd = ["rattler-build", "build", "-r", "src/code_aster/scotch/recipe.yaml", "-m", "src/common_rattler.yaml", "--experimental"] }
mfront = { cmd = ["rattler-build", "build", "-r", "src/code_aster/mfront/recipe.yaml", "-m", "src/common_rattler.yaml"] }
mgis = { cmd = ["rattler-build", "build", "-r", "src/code_aster/mgis/recipe.yaml", "-m", "src/common_rattler.yaml"] }
libmed = { cmd = ["rattler-build", "build", "-r","src/code_aster/libmed/recipe.yaml", "-m", "src/common_rattler.yaml"] }
medcoupling = { cmd = ["rattler-build", "build", "-r","src/code_aster/medcoupling/recipe.yaml", "-m", "src/common_rattler.yaml"] }
metis = { cmd = ["rattler-build", "build", "-r","src/code_aster/metis/recipe.yaml", "-m", "src/common_rattler.yaml"] }
mumps = { cmd = ["rattler-build", "build", "-r","src/code_aster/mumps/recipe.yaml", "-m", "src/common_rattler.yaml"] }
code_aster = { cmd = ["rattler-build", "build", "-r","src/code_aster/code_aster/recipe.yaml", "-m", "src/common_rattler.yaml"] }
code_aster32d = { cmd = ["rattler-build", "build", "-r","src/code_aster/code_aster/recipe.yaml", "-m", "src/common_rattler.yaml", '-m', 'src/.ci_nompi_debug_32.yaml',"-c", "https://repo.prefix.dev/code-aster","-c", "conda-forge"] }

# "hdf5",
code-aster-all = { cmd = ["echo", "success"], depends-on = ["scotch", "metis", "mumps",  "libmed", "medcoupling", "mfront", "mgis", "code_aster"] }

# Cadquery
ocp = { cmd = ["rattler-build", "build", "-r","src/cadquery/ocp/recipe.yaml", "-m", "src/common_rattler.yaml"] }
cadquery = { cmd = ["rattler-build", "build", "-r","src/cadquery/cadquery/recipe.yaml", "-m", "src/common_rattler.yaml"] }
ipopt = { cmd = ["rattler-build", "build", "-r","src/cadquery/ipopt/recipe.yaml", "-m", "src/common_rattler.yaml", "-m", "src/cadquery/ipopt/win2019.yaml", "-c", "https://repo.prefix.dev/code-aster","-c", "conda-forge"] }
casadi = { cmd = ["rattler-build", "build", "-r","src/cadquery/casadi/recipe.yaml", "-m", "src/common_rattler.yaml", "-m", "src/cadquery/ipopt/win2019.yaml",  "-c", "https://repo.prefix.dev/code-aster","-c", "conda-forge"] }

# Adapy deps
ifcopenshell = { cmd = ["rattler-build", "build", "-r", "src/ifcopenshell/recipe.yaml", "-m", "src/common_rattler.yaml"], outputs=["output/*/ifcopenshell*.conda"] }
h5py = { cmd = ["rattler-build", "build", "-r", "src/h5py/recipe.yaml", "-m", "src/common_rattler.yaml"], outputs=["output/*/h5py*.conda"] }
libnetcdf4 = { cmd = ["rattler-build", "build", "-r", "src/libnetcdf4/recipe.yaml", "-m", "src/common_rattler.yaml"], outputs=["output/*/libnetcdf4*.conda"] }
netcdf4 = { cmd = ["rattler-build", "build", "-r", "src/netcdf4/recipe.yaml", "-m", "src/common_rattler.yaml"], outputs=["output/*/netcdf4*.conda"], depends-on=["libnetcdf4"] }

adapy-all = { cmd = ["echo", "success"], depends-on = ["hdf5", "h5py", "ifcopenshell", "code-aster-all"] }

[feature.boa.tasks]

# Flang
llvmdev = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/llvmdev" }
lld = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/lld" }
clangdev = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/clangdev" }
compiler-rt = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/compiler-rt" }
mlir = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/mlir" }
flang = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/flang" }
flang-activation = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/llvm/flang-activation" }

# Calculix
calculix = { cmd = ["conda", "mambabuild", "."], cwd = "src/calculix/calculix" }
spooles = { cmd = ["conda", "mambabuild", "."], cwd = "src/calculix/spooles" }
arpack = { cmd = ["conda", "mambabuild", "."], cwd = "src/calculix/arpack" }

# Other
cpack-config = { cmd = ["python", "src/cpack/cpack/condarc_builder.py", "--condarc-filepath=$CONDA_PREFIX/.condarc"]}
#h5py = { cmd = ["conda", "mambabuild", ".", "-m", "../common.yaml"], cwd = "src/h5py" }



# OCCT
occt = { cmd = ["conda", "mambabuild", ".", "-m", "../common.yaml", "--python", "3.12", "--variants", "\"{'build_type':'debug','variant':'novtk'}\""], cwd = "src/occt" }
pyocc = { cmd = ["conda", "mambabuild", ".", "-m", "../common.yaml", "--python", "3.12", "--variants", "\"{'build_type':'debug','variant':'novtk'}\""], cwd = "src/pythonocc-core" }
stepcode = { cmd = ["conda", "mambabuild", ".", "-m", "../common.yaml"], cwd = "src/stepcode" }

# Code Aster Packages
homard = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/code_aster/homard" }
parmetis = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/code_aster/parmetis" }
petsc = { cmd = ["conda", "mambabuild", ".", "-m", "../../common.yaml"], cwd = "src/code_aster/petsc" }

[feature.debug]
platforms = ["win-64", "linux-64"]
channels = ["https://repo.prefix.dev/code-aster", "conda-forge"]

[feature.debug.dependencies]
hdf5 = { build = "*debug*" }
libmed = { build = "*debug*" }
medcoupling = { build = "*debug*" }
mfront = { build = "*debug*" }
mgis = { build = "*debug*" }
scotch = { build = "*debug*" }

[feature.release]
platforms = ["win-64", "linux-64"]
channels = ["https://repo.prefix.dev/code-aster", "conda-forge"]

[feature.release.dependencies]
hdf5 = { build = "*release*" }
libmed = { build = "*release*" }
medcoupling = { build = "*release*" }
mfront = { build = "*release*" }
mgis = { build = "*release*" }
scotch = { build = "*release*" }
#code_aster = { build = "*release*" }


[feature.release.tasks]
test_code_aster = { cmd = ["src/code_aster/rattler-wrap.bat", "code_aster"] }

[feature.debug.tasks]
test_code_aster = { cmd = ["src/code_aster/rattler-wrap.bat", "code_aster"] }